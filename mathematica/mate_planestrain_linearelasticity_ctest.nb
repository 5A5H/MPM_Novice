(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    174540,       4272]
NotebookOptionsPosition[    169828,       4170]
NotebookOutlinePosition[    170168,       4185]
CellTagsIndexPosition[    170125,       4182]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Material Subroutine
Plane Strain Linear Elasticity\
\>", "Title",
 CellChangeTimes->{{3.704517424874181*^9, 3.704517428226709*^9}, {
  3.704963438831399*^9, 
  3.704963453837385*^9}},ExpressionUUID->"35744ce8-ad11-4158-9b67-\
64431b7120b7"],

Cell[CellGroupData[{

Cell["Documentation", "Subsection",
 CellChangeTimes->{{3.7045356653485003`*^9, 
  3.704535668835506*^9}},ExpressionUUID->"8dbbca34-2e28-4462-920d-\
536e8f7ef81a"],

Cell[TextData[{
 "This UserMaterial considers linear theory in a 2d plane strain framework.\n\
\[CapitalPi] =  ",
 Cell[BoxData[
  FormBox[
   FractionBox["\[Lambda]", "2"], TraditionalForm]],ExpressionUUID->
  "bdcffb52-af4e-429b-8cb9-e0ef7e8dc19c"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SuperscriptBox[
     RowBox[{"tr", "(", "\[CurlyEpsilon]", ")"}], "2"]}], TraditionalForm]],
  ExpressionUUID->"d6d37068-0ca1-4077-a08d-5c2bdab00387"],
 "  + \[Mu] ",
 Cell[BoxData[
  FormBox[
   RowBox[{"tr", "(", 
    RowBox[{"\[CurlyEpsilon]", ".", "\[CurlyEpsilon]"}], ")"}], 
   TraditionalForm]],ExpressionUUID->"fc3c948e-2612-4e02-bfed-214dab20087a"],
 "\nwith = \[CurlyEpsilon] = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Del]", "sym"], TraditionalForm]],ExpressionUUID->
  "d7e7d9d2-e6ce-4620-b1ff-c9d2fddd9b2a"],
 "u  where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["u", 
    RowBox[{"3", " "}]], TraditionalForm]],ExpressionUUID->
  "f484e528-15ca-4588-99f6-7a105f0c6ea7"],
 "= 0 hence ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "13"], TraditionalForm]],ExpressionUUID->
  "3ea9f98d-0ab9-4b1a-8e2d-d616500e8b8a"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "23"], TraditionalForm]],ExpressionUUID->
  "14d4ccf4-1d61-4630-bc28-3dce26f041c0"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "33"], TraditionalForm]],ExpressionUUID->
  "92f77998-5dfd-4f0b-b19f-b20f5ef7bf51"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "31"], TraditionalForm]],ExpressionUUID->
  "3d5dfe03-e95f-4d4e-b530-4c358ee3d7ea"],
 " = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "32"], TraditionalForm]],ExpressionUUID->
  "b5a91ffa-45d1-4011-a1e6-2c4d53f3abd8"],
 " = 0 (plane strain assumption)\nmate01[ ElasticModulus , PossionRatio , \
\[CurlyEpsilon] ,Solution]; \n\[CurlyEpsilon] = {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "11"], TraditionalForm]],ExpressionUUID->
  "ecb622f7-8a26-4f50-8807-40f8bc022957"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "12"], TraditionalForm]],ExpressionUUID->
  "c9d3fc34-8b25-4ef7-9543-3addc10e3637"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[CurlyEpsilon]", "22"], TraditionalForm]],ExpressionUUID->
  "6eb4cfc4-8010-4e90-9b0e-20c8c16dac6a"],
 "};\nSolution = {",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "11"], TraditionalForm]],ExpressionUUID->
  "b0d3bbe2-d543-4291-af05-f9ca2087b3bf"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "12"], TraditionalForm]],ExpressionUUID->
  "8c4b8042-786b-4d9e-a905-73b2696f9895"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "22"], TraditionalForm]],ExpressionUUID->
  "3e796edf-85db-4c17-bad1-39405cd4e384"],
 ",",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "33"], TraditionalForm]],ExpressionUUID->
  "928f3244-976c-4ab1-b1a7-36e7e06ad05e"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "11"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "11"]}]], TraditionalForm]],
  ExpressionUUID->"57011193-7f38-4389-a9c0-ea41cd0be14c"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "11"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "12"]}]], TraditionalForm]],
  ExpressionUUID->"1dd9ef46-1c77-49eb-8dec-3921e257bb61"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "11"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "22"]}]], TraditionalForm]],
  ExpressionUUID->"e44a6148-8d2c-4bee-a526-4c46003fa637"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "12"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "11"]}]], TraditionalForm]],
  ExpressionUUID->"3da97b4c-7084-48a0-986e-4b84c0dcdbdd"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "12"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "12"]}]], TraditionalForm]],
  ExpressionUUID->"001ec647-a182-48fc-a7a6-0430e616e54d"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "12"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "22"]}]], TraditionalForm]],
  ExpressionUUID->"7deb3348-dceb-4754-b9ff-da9210c064bc"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "22"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "11"]}]], TraditionalForm]],
  ExpressionUUID->"a674939b-0be0-4491-971c-29635db8eefb"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "22"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "12"]}]], TraditionalForm]],
  ExpressionUUID->"be908c6d-aa88-42bc-a52c-4574608f5f8f"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "22"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "22"]}]], TraditionalForm]],
  ExpressionUUID->"5c6b5a72-e21e-4f33-92ba-4aa8b21fad86"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "33"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "11"]}]], TraditionalForm]],
  ExpressionUUID->"2ca7d3e2-91aa-4806-909c-5fd9683d7478"],
 ",",
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[Sigma]", "33"]}], 
    RowBox[{"\[PartialD]", " ", 
     SubscriptBox["\[CurlyEpsilon]", "12"]}]], TraditionalForm]],
  ExpressionUUID->"f3af4fb0-a623-4b0b-8329-2759c446550f"],
 ",",
 Cell[BoxData[
  FormBox[
   RowBox[{
    FractionBox[
     RowBox[{"\[PartialD]", " ", 
      SubscriptBox["\[Sigma]", "33"]}], 
     RowBox[{"\[PartialD]", " ", 
      SubscriptBox["\[CurlyEpsilon]", "22"]}]], " "}], TraditionalForm]],
  ExpressionUUID->"20b3875b-3d04-4158-8385-542c18336b2b"],
 "};\nOutputLength = 16"
}], "Text",
 CellChangeTimes->{{3.704544129336649*^9, 
  3.70454448174839*^9}},ExpressionUUID->"95f75d79-fc70-4e85-94eb-\
bf05561bfa1b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Material Subroutine", "Subsection",
 CellChangeTimes->{{3.704535673504863*^9, 
  3.7045356810995893`*^9}},ExpressionUUID->"97acbb4e-080d-4a82-a07c-\
19e0a5fef2b1"],

Cell[BoxData[
 RowBox[{"Language", " ", 
  RowBox[{"Targets", ":", GridBox[{
     {"1", "Mathematica"},
     {"2", 
      RowBox[{"C", "-", "Mathematica"}]},
     {"3", "Fortran"}
    },
    GridBoxDividers->{
     "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
      "Rows" -> {True, {False}, True}, "RowsIndexed" -> {}}]}]}]], "Text",
 CellChangeTimes->{{3.704544720433525*^9, 
  3.704544725168075*^9}},ExpressionUUID->"4e1c2e72-720e-43fe-ae6b-\
0e1250a6efcc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SubroutineName", "=", "\"\<mate_01\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MaterialName", "=", "\"\<mate01\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LanguageTarget", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Switch", "[", 
   RowBox[{
   "LanguageTarget", "\[IndentingNewLine]", ",", "1", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"SMSInitialize", "[", 
     RowBox[{"SubroutineName", ",", 
      RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<Mathematica\>\""}]}], "]"}],
     "\[IndentingNewLine]", ",", "2", ",", "\[IndentingNewLine]", 
    RowBox[{"SMSInitialize", "[", 
     RowBox[{"SubroutineName", ",", 
      RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C\>\""}], ",", 
      RowBox[{"\"\<Environment\>\"", "\[Rule]", "\"\<MathLink\>\""}]}], "]"}],
     "\[IndentingNewLine]", ",", "3", ",", "\[IndentingNewLine]", 
    RowBox[{"SMSInitialize", "[", 
     RowBox[{"SubroutineName", ",", 
      RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C++\>\""}]}], "]"}], 
    "\[IndentingNewLine]", ",", "4", ",", "\[IndentingNewLine]", 
    RowBox[{"SMSInitialize", "[", 
     RowBox[{"SubroutineName", ",", 
      RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<Fortran\>\""}]}], "]"}], 
    "\[IndentingNewLine]", ",", "_", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "Print", "[", "\"\<Error LanguageTarget not supported\>\"", "]"}], 
     ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"MaterialName", ",", "\[IndentingNewLine]", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "2", "]"}], ",", 
      RowBox[{"Eps$$", "[", "3", "]"}], ",", 
      RowBox[{"Exp$$", "[", "16", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Emod", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"MaterialData$$", "[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"\[Nu]", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"MaterialData$$", "[", "2", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Mu]"}], "}"}], "\[DoubleRightTee]", 
   RowBox[{"SMSHookeToLame", "[", 
    RowBox[{"Emod", ",", "\[Nu]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CurlyEpsilon]vec", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Eps$$", "[", "1", "]"}], ",", 
      RowBox[{"Eps$$", "[", "2", "]"}], ",", 
      RowBox[{"Eps$$", "[", "3", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CurlyEpsilon]33", "=", "0"}], ";", 
   RowBox[{
    RowBox[{"-", "\[Lambda]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "+", 
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "+", 
       RowBox[{"2", "\[Mu]"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"0", " ", "for", " ", "plane", " ", "strain"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSFreeze", "[", 
   RowBox[{"\[CurlyEpsilon]", ",", 
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], 
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], "0"},
       {
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], 
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], "0"},
       {"0", "0", "\[CurlyEpsilon]33"}
      },
      GridBoxDividers->{
       "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
        "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], ",", 
    RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPi]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{
     FractionBox["\[Lambda]", "2"], 
     SuperscriptBox[
      RowBox[{"Tr", "[", "\[CurlyEpsilon]", "]"}], "2"]}], "+", 
    RowBox[{"\[Mu]", " ", 
     RowBox[{"Tr", "[", 
      RowBox[{"\[CurlyEpsilon]", ".", "\[CurlyEpsilon]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "\[DoubleRightTee]", 
   RowBox[{"SMSD", "[", 
    RowBox[{"\[CapitalPi]", ",", "\[CurlyEpsilon]", ",", 
     RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]vec", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[Sigma]vec", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SMSD", "[", 
      RowBox[{
       RowBox[{
       "\[Sigma]vec", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "j", 
        "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{
    RowBox[{
    "Flatten", "[", "\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]",
      "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSWrite", "[", 
   RowBox[{"\"\<LocalAuxiliaryVariables\>\"", "\[Rule]", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7019422334683743`*^9, 3.701942240555492*^9}, {
   3.701942551827433*^9, 3.7019425973402653`*^9}, 3.701942657899887*^9, {
   3.701942771968176*^9, 3.701942954385462*^9}, {3.701944266809721*^9, 
   3.701944420250247*^9}, {3.7019445990421953`*^9, 3.701944599570176*^9}, {
   3.701944660346901*^9, 3.70194477540685*^9}, {3.701955726306006*^9, 
   3.7019557287308893`*^9}, {3.701955760567013*^9, 3.701955763836216*^9}, {
   3.701955819458672*^9, 3.701955822311013*^9}, {3.704201913057893*^9, 
   3.704201913157365*^9}, {3.704202100890979*^9, 3.704202146351118*^9}, {
   3.704202634440819*^9, 3.704202640132511*^9}, {3.704217798786852*^9, 
   3.704217819290286*^9}, {3.704218573992752*^9, 3.70421858640561*^9}, {
   3.704453218676137*^9, 3.7044532579484673`*^9}, {3.704453315091712*^9, 
   3.704453383782406*^9}, 3.704513741771583*^9, {3.704515797861112*^9, 
   3.7045158628588753`*^9}, {3.7045159165994053`*^9, 3.704515963792543*^9}, {
   3.704516027311037*^9, 3.704516046615904*^9}, {3.7045160797269497`*^9, 
   3.7045160968497143`*^9}, {3.704516141041891*^9, 3.704516172774065*^9}, {
   3.7045162078456173`*^9, 3.704516365739004*^9}, {3.704516493039452*^9, 
   3.704516501224061*^9}, {3.7045169809462557`*^9, 3.704517035591731*^9}, {
   3.704535860102519*^9, 3.704535860744782*^9}, {3.704535959453867*^9, 
   3.7045360998216133`*^9}, {3.704536215915635*^9, 3.704536269991667*^9}, 
   3.704536389908112*^9, {3.7045365036142178`*^9, 3.7045365790668383`*^9}, {
   3.704536735560103*^9, 3.704536738897978*^9}, {3.704536770466611*^9, 
   3.7045369008464937`*^9}, 3.704536982085279*^9, {3.704544490268446*^9, 
   3.704544623680798*^9}, {3.704544728826064*^9, 3.704544729455533*^9}, {
   3.704553052376581*^9, 3.704553056288372*^9}, {3.704555019650963*^9, 
   3.704555042754455*^9}, {3.704615454633226*^9, 3.704615473779351*^9}, {
   3.704616514913865*^9, 3.704616551846909*^9}, 3.704963196886642*^9, {
   3.767671638965519*^9, 3.7676716667878857`*^9}, {3.7678438777695017`*^9, 
   3.7678439028250113`*^9}, 3.767854801184662*^9, {3.767854850085698*^9, 
   3.767854898303043*^9}, {3.767854988248066*^9, 3.7678549943334303`*^9}, {
   3.767855053838141*^9, 3.767855054128645*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"3f0d847a-6123-4db9-a12f-9c7d75c36d19"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox["\"File: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"\"mate_01.m\"",StyleBox[
       "\"  Size: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"1243",StyleBox[
       "\"  Time: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"0"},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"Method\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["\<\"mate01\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["\<\"No.Formulae\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "6"},
        {
         StyleBox["\<\"No.Leafs\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "205"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{"Columns" -> {True, True}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Rows" -> {True, True}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.704535688727386*^9, 3.704536112402842*^9, {3.704536257344387*^9, 
   3.704536266423625*^9}, {3.704536380581954*^9, 3.704536403391712*^9}, {
   3.7045365056988087`*^9, 3.704536580069083*^9}, 3.7045367710703583`*^9, 
   3.7045368223463993`*^9, {3.70453688862429*^9, 3.704536901803383*^9}, {
   3.7045369734067173`*^9, 3.704536985064354*^9}, 3.704541824229493*^9, 
   3.7045446256363573`*^9, 3.704544734979637*^9, 3.7045530122679996`*^9, 
   3.704553064780271*^9, 3.704555046761688*^9, 3.7046165229298286`*^9, 
   3.704616563058189*^9, 3.704825824959606*^9, 3.704960893235141*^9, 
   3.7049631990796127`*^9, {3.767671655908482*^9, 3.767671667856558*^9}, 
   3.767844463348225*^9, 3.767854803210774*^9, {3.7678548787750597`*^9, 
   3.767854899952228*^9}, 3.767854995874751*^9, 3.767855055345902*^9, 
   3.769617418839283*^9},
 CellLabel->
  "During evaluation of \
In[109]:=",ExpressionUUID->"167713c2-fa53-43eb-9e79-d3bada400db2"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Material Test", "Subsection",
 CellChangeTimes->{{3.704535740636569*^9, 
  3.7045357443590717`*^9}},ExpressionUUID->"88b6064e-dd20-4606-9e73-\
a85e5427c825"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Get", "[", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<mate_01.m\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Res", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", "16"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mate01", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"210000", ",", "0.35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0", ",", "0"}], "}"}], ",", "Res"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]sol", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"Res", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
       
       RowBox[{"Res", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
       "0"},
      {
       RowBox[{"Res", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
       
       RowBox[{"Res", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       "0"},
      {"0", "0", 
       RowBox[{"Res", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}
     },
     GridBoxDividers->{
      "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
       "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], ";", 
  RowBox[{"\[Sigma]sol", "//", "MatrixForm"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]sol", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{
     RowBox[{"Res", "\[LeftDoubleBracket]", 
      RowBox[{"5", ";;"}], "\[RightDoubleBracket]"}], ",", "3"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.704535761147209*^9, 3.704535765679923*^9}, {
   3.704541793499593*^9, 3.704541808899518*^9}, {3.704544642110094*^9, 
   3.704544660243181*^9}, {3.704544748806635*^9, 3.704544794727263*^9}, {
   3.704555053422144*^9, 3.7045550561755457`*^9}, 3.704825862680315*^9, {
   3.76785495094349*^9, 3.767854951537159*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"56bb9bb5-a137-4381-8bd6-0aeef7de36c0"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"33703.70370370369`", "0.`", "0"},
     {"0.`", "18148.148148148142`", "0"},
     {"0", "0", "18148.148148148142`"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.704535749627859*^9, 3.7045357661701593`*^9}, {
   3.7045417944175377`*^9, 3.704541825172423*^9}, {3.704544636735746*^9, 
   3.704544661297142*^9}, 3.704544738035894*^9, 3.704544795235661*^9, 
   3.7045502215089006`*^9, 3.7045530125798798`*^9, 3.704553065106832*^9, 
   3.704555057837618*^9, 3.704825832582562*^9, {3.704825863695313*^9, 
   3.704825875739793*^9}, 3.767854808812537*^9, 3.767854910411285*^9, 
   3.767854952258925*^9, 3.76785500021218*^9, 3.7678550583035727`*^9, 
   3.769617418978623*^9},
 CellLabel->
  "Out[130]//MatrixForm=",ExpressionUUID->"bb68e662-a822-49ef-95d7-\
545a29779289"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Material Plane Stress", "Title",
 CellChangeTimes->{{3.7678722273326683`*^9, 
  3.767872232631587*^9}},ExpressionUUID->"7de93dac-5ed9-4521-a44a-\
58035c84dbf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "MaterialInfo", "=", "\"\<\\*\nSome infos \nand some more\n*\\ \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSInitialize", "[", 
   RowBox[{"\"\<SmallStrainHookePlaneStress2D\>\"", ",", 
    RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C++\>\""}], ",", 
    RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Optimal\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"\"\<SmallStrainHookePlaneStress2D\>\"", ",", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "2", "]"}], ",", 
      RowBox[{"Eps$$", "[", "3", "]"}], ",", 
      RowBox[{"Exp$$", "[", "16", "]"}]}], "]"}], ",", 
    RowBox[{"\"\<Verbatim\>\"", "\[Rule]", "MaterialInfo"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", "\"\<bool debugaceroutine=true;\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Emod", ",", "\[Nu]"}], "}"}], "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "1", "]"}], ",", 
      RowBox[{"MaterialData$$", "[", "2", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Mu]"}], "}"}], "\[DoubleRightTee]", 
   RowBox[{"SMSHookeToLame", "[", 
    RowBox[{"Emod", ",", "\[Nu]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CurlyEpsilon]vec", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Eps$$", "[", "1", "]"}], ",", 
      RowBox[{"Eps$$", "[", "2", "]"}], ",", 
      RowBox[{"Eps$$", "[", "3", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CurlyEpsilon]33", "=", 
   RowBox[{
    RowBox[{"-", "\[Lambda]"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "+", 
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "2", 
        "\[RightDoubleBracket]"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"\[Lambda]", "+", 
       RowBox[{"2", "\[Mu]"}]}], ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSFreeze", "[", 
   RowBox[{"\[CurlyEpsilon]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "\[CurlyEpsilon]33"}], "}"}]}], "}"}], ",", 
    RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPi]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{
     FractionBox["\[Lambda]", "2"], 
     SuperscriptBox[
      RowBox[{"Tr", "[", "\[CurlyEpsilon]", "]"}], "2"]}], "+", 
    RowBox[{"\[Mu]", " ", 
     RowBox[{"Tr", "[", 
      RowBox[{"\[CurlyEpsilon]", ".", "\[CurlyEpsilon]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "\[DoubleRightTee]", 
   RowBox[{"SMSD", "[", 
    RowBox[{"\[CapitalPi]", ",", "\[CurlyEpsilon]", ",", 
     RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]vec", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[Sigma]vec", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sigt", "\[RightTee]", 
   RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugaceroutine) std::cout << 'sigt: ' <<\>\"", ",", "sigt", ",", 
    "\"\< << std::endl;\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SMSD", "[", 
      RowBox[{
       RowBox[{
       "\[Sigma]vec", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "j", 
        "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{
    RowBox[{
    "Flatten", "[", "\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]",
      "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSIf", "[", 
   RowBox[{
    RowBox[{"SMSLogical", "[", "debugaceroutine$$$", "]"}], "\[Equal]", 
    "True"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSEndIf", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSWrite", "[", 
   RowBox[{"\"\<LocalAuxiliaryVariables\>\"", "\[Rule]", "True"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"FilePrint", "[", "\"\<SmallStrainHookePlaneStress2D.cpp\>\"", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7019422334683743`*^9, 3.701942240555492*^9}, {
   3.701942551827433*^9, 3.7019425973402653`*^9}, 3.701942657899887*^9, {
   3.701942771968176*^9, 3.701942954385462*^9}, {3.701944266809721*^9, 
   3.701944420250247*^9}, {3.7019445990421953`*^9, 3.701944599570176*^9}, {
   3.701944660346901*^9, 3.70194477540685*^9}, {3.701955726306006*^9, 
   3.7019557287308893`*^9}, {3.701955760567013*^9, 3.701955763836216*^9}, {
   3.701955819458672*^9, 3.701955822311013*^9}, {3.704201913057893*^9, 
   3.704201913157365*^9}, {3.704202100890979*^9, 3.704202146351118*^9}, {
   3.704202634440819*^9, 3.704202640132511*^9}, {3.704217798786852*^9, 
   3.704217819290286*^9}, {3.704218573992752*^9, 3.70421858640561*^9}, {
   3.704453218676137*^9, 3.7044532579484673`*^9}, {3.704453315091712*^9, 
   3.704453383782406*^9}, 3.704513741771583*^9, {3.704515797861112*^9, 
   3.7045158628588753`*^9}, {3.7045159165994053`*^9, 3.704515963792543*^9}, {
   3.704516027311037*^9, 3.704516046615904*^9}, {3.7045160797269497`*^9, 
   3.7045160968497143`*^9}, {3.704516141041891*^9, 3.704516172774065*^9}, {
   3.7045162078456173`*^9, 3.704516365739004*^9}, {3.704516493039452*^9, 
   3.704516501224061*^9}, {3.7045169809462557`*^9, 3.704517035591731*^9}, {
   3.704535860102519*^9, 3.704535860744782*^9}, {3.704535959453867*^9, 
   3.7045360998216133`*^9}, {3.704536215915635*^9, 3.704536269991667*^9}, 
   3.704536389908112*^9, {3.7045365036142178`*^9, 3.7045365790668383`*^9}, {
   3.704536735560103*^9, 3.704536738897978*^9}, {3.704536770466611*^9, 
   3.7045369008464937`*^9}, 3.704536982085279*^9, {3.704544490268446*^9, 
   3.704544623680798*^9}, {3.704544728826064*^9, 3.704544729455533*^9}, {
   3.704553052376581*^9, 3.704553056288372*^9}, {3.704555019650963*^9, 
   3.704555042754455*^9}, {3.704615454633226*^9, 3.704615473779351*^9}, {
   3.704616514913865*^9, 3.704616551846909*^9}, 3.704963196886642*^9, {
   3.767671638965519*^9, 3.7676716667878857`*^9}, {3.7678438777695017`*^9, 
   3.7678439028250113`*^9}, {3.767854050966913*^9, 3.7678541558615437`*^9}, {
   3.767854189445915*^9, 3.767854258071858*^9}, 3.767854302526312*^9, {
   3.7678543419698477`*^9, 3.767854401822257*^9}, {3.7678544634173307`*^9, 
   3.767854471415948*^9}, {3.767854655424312*^9, 3.767854724903532*^9}, 
   3.767855019748522*^9, 3.767858231452024*^9, {3.7678722477328157`*^9, 
   3.76787227185513*^9}, {3.767872379483078*^9, 3.767872384129302*^9}, {
   3.7696169002877693`*^9, 3.7696169074779863`*^9}, {3.7696169547890053`*^9, 
   3.76961696133095*^9}, {3.7696169931801147`*^9, 3.769617011225299*^9}, {
   3.769617089223339*^9, 3.769617137345649*^9}, {3.769617378761156*^9, 
   3.769617380548265*^9}, 3.76961741647993*^9, {3.7696174752300873`*^9, 
   3.7696174894065437`*^9}, {3.7696179920110598`*^9, 3.7696180737212267`*^9}, 
   3.769618110496983*^9, {3.769618153480913*^9, 3.769618178376096*^9}, {
   3.769618208681161*^9, 3.769618214784794*^9}, {3.769618347294129*^9, 
   3.7696183554604683`*^9}, {3.769618387194421*^9, 3.769618391921958*^9}, {
   3.769618813191036*^9, 3.7696188978511972`*^9}, {3.769619039971738*^9, 
   3.769619118080332*^9}, {3.769619292278298*^9, 3.76961939947717*^9}, {
   3.769619434931073*^9, 3.7696194590352173`*^9}, {3.769619527083165*^9, 
   3.769619539590551*^9}, {3.769621049843371*^9, 3.769621052522295*^9}, {
   3.769664608142582*^9, 3.769664617849169*^9}, 3.769664679482464*^9, {
   3.769665413000909*^9, 3.769665510751696*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"f3ea91b8-ed2b-468c-a1a4-acea30ae07fc"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox["\"File: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],
       "\"SmallStrainHookePlaneStress2D.cpp\"",StyleBox[
       "\"  Size: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"1437",StyleBox[
       "\"  Time: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"0"},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"Method\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["\<\"SmallStrainHookePlaneStress2D\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["\<\"No.Formulae\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "12"},
        {
         StyleBox["\<\"No.Leafs\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "243"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{"Columns" -> {True, True}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Rows" -> {True, True}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.769619120205764*^9, {3.7696193577911377`*^9, 3.769619384082189*^9}, {
   3.769619439194191*^9, 3.7696194612141447`*^9}, 3.769619543019421*^9, 
   3.7696210545884237`*^9, 3.76966462266956*^9, 3.769664681582439*^9, {
   3.769665425135303*^9, 3.769665445567582*^9}, 3.769665478967741*^9, 
   3.7696655121295547`*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"d38ac246-6cb7-4642-914b-29eee48c5aaa"],

Cell["\<\
/*************************************************************
* AceGen    6.923 MacOSX (19 Apr 19)                         *
*           Co. J. Korelc  2013           16 Jun 19 11:18:32 *
**************************************************************
User     : Full professional version
Notebook : mate_planestrain_linearelasticity_ctest
Evaluation time                 : 0 s     Mode  : Optimal
Number of formulae              : 12      Method: Automatic
Subroutine                      : SmallStrainHookePlaneStress2D size: 243
Total size of Mathematica  code : 243 subexpressions
Total size of C code            : 788 bytes */
#include \"sms.h\"

/******************* S U B R O U T I N E *********************/
void SmallStrainHookePlaneStress2D(double MaterialData[2],double Eps[3]
     ,double Exp[16])
{
double v[149];
\\*
Some infos 
and some more
* 
v[39]=Eps[0]+Eps[1];
bool debugaceroutine=true;
v[37]=MaterialData[0]/(1e0+MaterialData[1]);
v[4]=(MaterialData[1]*v[37])/(1e0-2e0*MaterialData[1]);
v[38]=-(v[4]/(v[37]+v[4]));
v[31]=(1e0+v[38])*v[4];
v[33]=v[31]+v[37];
v[21]=(v[39]+v[38]*v[39])*v[4];
v[18]=v[21]+Eps[0]*v[37];
Exp[0]=v[18];
Exp[1]=v[21]+Eps[1]*v[37];
Exp[2]=0e0;
Exp[3]=Eps[2]*v[37];
if (debugaceroutine) std::cout << \"sigt: \" <<v[18] << std::endl;
Exp[4]=v[33];
Exp[5]=v[31];
Exp[6]=0e0;
Exp[7]=v[31];
Exp[8]=v[33];
Exp[9]=0e0;
Exp[10]=0e0;
Exp[11]=0e0;
Exp[12]=0e0;
Exp[13]=0e0;
Exp[14]=0e0;
Exp[15]=v[37];
};\
\>", "Print",
 CellChangeTimes->{
  3.769619120205764*^9, {3.7696193577911377`*^9, 3.769619384082189*^9}, {
   3.769619439194191*^9, 3.7696194612141447`*^9}, 3.769619543019421*^9, 
   3.7696210545884237`*^9, 3.76966462266956*^9, 3.769664681582439*^9, {
   3.769665425135303*^9, 3.769665445567582*^9}, 3.769665478967741*^9, 
   3.769665512201603*^9},
 CellLabel->
  "During evaluation of \
In[110]:=",ExpressionUUID->"8abdb2c1-0e32-4682-9e25-f3cb4b81b7a6"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Material Plane Strain", "Title",
 CellChangeTimes->{{3.767872283101572*^9, 
  3.767872294562573*^9}},ExpressionUUID->"45ecbc3f-c8bb-4e2d-b361-\
1289ebc4f19d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSInitialize", "[", 
   RowBox[{"\"\<SmallStrainHookePlaneStrain2D\>\"", ",", 
    RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C++\>\""}], ",", 
    RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Optimal\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"\"\<SmallStrainHookePlaneStrain2D\>\"", ",", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "2", "]"}], ",", 
      RowBox[{"Eps$$", "[", "3", "]"}], ",", 
      RowBox[{"Exp$$", "[", "16", "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CurlyEpsilon]vec", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Eps$$", "[", "1", "]"}], ",", 
      RowBox[{"Eps$$", "[", "2", "]"}], ",", 
      RowBox[{"Eps$$", "[", "3", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSFreeze", "[", 
   RowBox[{"\[CurlyEpsilon]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "3", 
         "\[RightDoubleBracket]"}], ",", 
        RowBox[{
        "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "2", 
         "\[RightDoubleBracket]"}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
    RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Emod", ",", "\[Nu]"}], "}"}], "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "1", "]"}], ",", 
      RowBox[{"MaterialData$$", "[", "2", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Mu]"}], "}"}], "\[DoubleRightTee]", 
   RowBox[{"SMSHookeToLame", "[", 
    RowBox[{"Emod", ",", "\[Nu]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalPi]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{
     FractionBox["\[Lambda]", "2"], 
     SuperscriptBox[
      RowBox[{"Tr", "[", "\[CurlyEpsilon]", "]"}], "2"]}], "+", 
    RowBox[{"\[Mu]", " ", 
     RowBox[{"Tr", "[", 
      RowBox[{"\[CurlyEpsilon]", ".", "\[CurlyEpsilon]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "\[DoubleRightTee]", 
   RowBox[{"SMSD", "[", 
    RowBox[{"\[CapitalPi]", ",", "\[CurlyEpsilon]", ",", 
     RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]vec", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"\[Sigma]", "\[LeftDoubleBracket]", 
      RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[Sigma]vec", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "4"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SMSD", "[", 
      RowBox[{
       RowBox[{
       "\[Sigma]vec", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{
       "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "j", 
        "\[RightDoubleBracket]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{
    RowBox[{
    "Flatten", "[", "\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]",
      "]"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Exp$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSWrite", "[", 
   RowBox[{"\"\<LocalAuxiliaryVariables\>\"", "\[Rule]", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7019422334683743`*^9, 3.701942240555492*^9}, {
   3.701942551827433*^9, 3.7019425973402653`*^9}, 3.701942657899887*^9, {
   3.701942771968176*^9, 3.701942954385462*^9}, {3.701944266809721*^9, 
   3.701944420250247*^9}, {3.7019445990421953`*^9, 3.701944599570176*^9}, {
   3.701944660346901*^9, 3.70194477540685*^9}, {3.701955726306006*^9, 
   3.7019557287308893`*^9}, {3.701955760567013*^9, 3.701955763836216*^9}, {
   3.701955819458672*^9, 3.701955822311013*^9}, {3.704201913057893*^9, 
   3.704201913157365*^9}, {3.704202100890979*^9, 3.704202146351118*^9}, {
   3.704202634440819*^9, 3.704202640132511*^9}, {3.704217798786852*^9, 
   3.704217819290286*^9}, {3.704218573992752*^9, 3.70421858640561*^9}, {
   3.704453218676137*^9, 3.7044532579484673`*^9}, {3.704453315091712*^9, 
   3.704453383782406*^9}, 3.704513741771583*^9, {3.704515797861112*^9, 
   3.7045158628588753`*^9}, {3.7045159165994053`*^9, 3.704515963792543*^9}, {
   3.704516027311037*^9, 3.704516046615904*^9}, {3.7045160797269497`*^9, 
   3.7045160968497143`*^9}, {3.704516141041891*^9, 3.704516172774065*^9}, {
   3.7045162078456173`*^9, 3.704516365739004*^9}, {3.704516493039452*^9, 
   3.704516501224061*^9}, {3.7045169809462557`*^9, 3.704517035591731*^9}, {
   3.704535860102519*^9, 3.704535860744782*^9}, {3.704535959453867*^9, 
   3.7045360998216133`*^9}, {3.704536215915635*^9, 3.704536269991667*^9}, 
   3.704536389908112*^9, {3.7045365036142178`*^9, 3.7045365790668383`*^9}, {
   3.704536735560103*^9, 3.704536738897978*^9}, {3.704536770466611*^9, 
   3.7045369008464937`*^9}, 3.704536982085279*^9, {3.704544490268446*^9, 
   3.704544623680798*^9}, {3.704544728826064*^9, 3.704544729455533*^9}, {
   3.704553052376581*^9, 3.704553056288372*^9}, {3.704555019650963*^9, 
   3.704555042754455*^9}, {3.704615454633226*^9, 3.704615473779351*^9}, {
   3.704616514913865*^9, 3.704616551846909*^9}, 3.704963196886642*^9, {
   3.767671638965519*^9, 3.7676716667878857`*^9}, {3.7678438777695017`*^9, 
   3.7678439028250113`*^9}, {3.767854050966913*^9, 3.7678541558615437`*^9}, {
   3.767854189445915*^9, 3.767854258071858*^9}, 3.767854302526312*^9, 
   3.7678550302467537`*^9, 3.767858239779293*^9, {3.767872276386835*^9, 
   3.76787233256909*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"2c61b94d-2de2-4ff1-b17f-cdb56fa1f763"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox["\"File: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],
       "\"SmallStrainHookePlaneStrain2D.cpp\"",StyleBox[
       "\"  Size: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"1231",StyleBox[
       "\"  Time: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"0"},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"Method\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["\<\"SmallStrainHookePlaneStrain2D\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["\<\"No.Formulae\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "6"},
        {
         StyleBox["\<\"No.Leafs\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "205"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{"Columns" -> {True, True}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Rows" -> {True, True}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{3.7678547466674843`*^9, 3.767855033385764*^9, 
  3.767858241493908*^9, 3.767872361277575*^9, 3.769617421325658*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"b185e971-fdba-4e8d-ad31-2fe341eb0c56"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Material Plane Stress STVK", "Title",
 CellChangeTimes->{{3.7678722273326683`*^9, 3.767872232631587*^9}, {
  3.7687464402495003`*^9, 3.768746441186487*^9}, {3.7687464919864883`*^9, 
  3.768746492835479*^9}},ExpressionUUID->"cbefa29c-0ce1-4064-a6c5-\
a28ad2c7906d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSInitialize", "[", 
   RowBox[{"\"\<STVKPlaneStress2D\>\"", ",", 
    RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C++\>\""}], ",", 
    RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Optimal\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"\"\<STVKPlaneStress2D\>\"", ",", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "2", "]"}], ",", 
      RowBox[{"F$$", "[", "9", "]"}], ",", 
      RowBox[{"Sig$$", "[", "9", "]"}], ",", 
      RowBox[{"Cmat$$", "[", 
       RowBox[{"9", ",", "9"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Emod", ",", "\[Nu]"}], "}"}], "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "1", "]"}], ",", 
      RowBox[{"MaterialData$$", "[", "2", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Mu]"}], "}"}], "\[DoubleRightTee]", 
   RowBox[{"SMSHookeToLame", "[", 
    RowBox[{"Emod", ",", "\[Nu]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalF]vec", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"F$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalF]", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"\[DoubleStruckCapitalF]vec", ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "\[DoubleRightTee]", 
   RowBox[{"SMSDet", "[", "\[DoubleStruckCapitalF]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalE]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalF]", "\[Transpose]"}], ".", 
       "\[DoubleStruckCapitalF]"}], "-", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalE]33", "=."}], ";", 
  RowBox[{
   RowBox[{"\[DoubleStruckCapitalE]", "\[LeftDoubleBracket]", 
    RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
   "\[DoubleStruckCapitalE]33"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalS]", "=", 
   RowBox[{
    RowBox[{"\[Lambda]", " ", 
     RowBox[{"Tr", "[", "\[DoubleStruckCapitalE]", "]"}], " ", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "+", 
    RowBox[{"2", " ", "\[Mu]", " ", "\[DoubleStruckCapitalE]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlaneStressCondition", "=", 
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalS]", "\[LeftDoubleBracket]", 
        RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], "\[Equal]", "0"}],
       ",", "\[DoubleStruckCapitalE]33"}], "]"}], "\[LeftDoubleBracket]", "1",
     "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalS]", "\[DoubleRightTee]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ReplaceAll", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[Lambda]", " ", 
        RowBox[{"Tr", "[", "\[DoubleStruckCapitalE]", "]"}], 
        RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "+", 
       RowBox[{"2", " ", "\[Mu]", " ", "\[DoubleStruckCapitalE]"}]}], ",", 
      "PlaneStressCondition"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "J"}], ")"}], " ", 
    RowBox[{"\[DoubleStruckCapitalF]", ".", "\[DoubleStruckCapitalS]", ".", 
     RowBox[{"\[DoubleStruckCapitalF]", "\[Transpose]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]vec", "=", 
   RowBox[{"Flatten", "[", "\[Sigma]", "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"SMSExport", "[", 
    RowBox[{"\[Sigma]vec", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sig$$", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "9"}], "}"}]}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SMSD", "[", 
        RowBox[{
         RowBox[{
         "\[Sigma]vec", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"SMSExport", "[", 
     RowBox[{
      RowBox[{
      "Flatten", "[", 
       "\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "]"}], ",", 
      
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Exp$$", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSWrite", "[", 
   RowBox[{"\"\<LocalAuxiliaryVariables\>\"", "\[Rule]", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7019422334683743`*^9, 3.701942240555492*^9}, {
   3.701942551827433*^9, 3.7019425973402653`*^9}, 3.701942657899887*^9, {
   3.701942771968176*^9, 3.701942954385462*^9}, {3.701944266809721*^9, 
   3.701944420250247*^9}, {3.7019445990421953`*^9, 3.701944599570176*^9}, {
   3.701944660346901*^9, 3.70194477540685*^9}, {3.701955726306006*^9, 
   3.7019557287308893`*^9}, {3.701955760567013*^9, 3.701955763836216*^9}, {
   3.701955819458672*^9, 3.701955822311013*^9}, {3.704201913057893*^9, 
   3.704201913157365*^9}, {3.704202100890979*^9, 3.704202146351118*^9}, {
   3.704202634440819*^9, 3.704202640132511*^9}, {3.704217798786852*^9, 
   3.704217819290286*^9}, {3.704218573992752*^9, 3.70421858640561*^9}, {
   3.704453218676137*^9, 3.7044532579484673`*^9}, {3.704453315091712*^9, 
   3.704453383782406*^9}, 3.704513741771583*^9, {3.704515797861112*^9, 
   3.7045158628588753`*^9}, {3.7045159165994053`*^9, 3.704515963792543*^9}, {
   3.704516027311037*^9, 3.704516046615904*^9}, {3.7045160797269497`*^9, 
   3.7045160968497143`*^9}, {3.704516141041891*^9, 3.704516172774065*^9}, {
   3.7045162078456173`*^9, 3.704516365739004*^9}, {3.704516493039452*^9, 
   3.704516501224061*^9}, {3.7045169809462557`*^9, 3.704517035591731*^9}, {
   3.704535860102519*^9, 3.704535860744782*^9}, {3.704535959453867*^9, 
   3.7045360998216133`*^9}, {3.704536215915635*^9, 3.704536269991667*^9}, 
   3.704536389908112*^9, {3.7045365036142178`*^9, 3.7045365790668383`*^9}, {
   3.704536735560103*^9, 3.704536738897978*^9}, {3.704536770466611*^9, 
   3.7045369008464937`*^9}, 3.704536982085279*^9, {3.704544490268446*^9, 
   3.704544623680798*^9}, {3.704544728826064*^9, 3.704544729455533*^9}, {
   3.704553052376581*^9, 3.704553056288372*^9}, {3.704555019650963*^9, 
   3.704555042754455*^9}, {3.704615454633226*^9, 3.704615473779351*^9}, {
   3.704616514913865*^9, 3.704616551846909*^9}, 3.704963196886642*^9, {
   3.767671638965519*^9, 3.7676716667878857`*^9}, {3.7678438777695017`*^9, 
   3.7678439028250113`*^9}, {3.767854050966913*^9, 3.7678541558615437`*^9}, {
   3.767854189445915*^9, 3.767854258071858*^9}, 3.767854302526312*^9, {
   3.7678543419698477`*^9, 3.767854401822257*^9}, {3.7678544634173307`*^9, 
   3.767854471415948*^9}, {3.767854655424312*^9, 3.767854724903532*^9}, 
   3.767855019748522*^9, 3.767858231452024*^9, {3.7678722477328157`*^9, 
   3.76787227185513*^9}, {3.767872379483078*^9, 3.767872384129302*^9}, {
   3.76874650280758*^9, 3.76874656165804*^9}, {3.768746599673617*^9, 
   3.768746700664364*^9}, {3.768746799417774*^9, 3.768746863068692*^9}, {
   3.768746949650963*^9, 3.768747048851878*^9}, {3.768747106079649*^9, 
   3.7687472224326077`*^9}, {3.768747316857086*^9, 3.76874739157579*^9}, {
   3.768747441232719*^9, 3.768747465560882*^9}, {3.76874761030118*^9, 
   3.7687476577671537`*^9}, {3.768747693775981*^9, 3.768747733807246*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"3850eaae-ceee-40a7-b471-af8c3ea4c819"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox["\"File: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"\"STVKPlaneStress2D.cpp\"",
       StyleBox["\"  Size: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"2084",StyleBox[
       "\"  Time: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"1"},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"Method\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["\<\"STVKPlaneStress2D\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["\<\"No.Formulae\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "23"},
        {
         StyleBox["\<\"No.Leafs\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "847"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{"Columns" -> {True, True}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Rows" -> {True, True}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.768747659010727*^9, {3.7687477103610888`*^9, 3.7687477366194677`*^9}, 
   3.769617422577015*^9},
 CellLabel->
  "During evaluation of \
In[166]:=",ExpressionUUID->"aefa16e5-17da-4717-85c1-3ccaed4f00ad"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Material Plane Strain STVK", "Title",
 CellChangeTimes->{{3.7678722273326683`*^9, 3.767872232631587*^9}, {
  3.7687464402495003`*^9, 3.768746441186487*^9}, {3.7687464919864883`*^9, 
  3.768746492835479*^9}, {3.7687491422917643`*^9, 
  3.768749143878159*^9}},ExpressionUUID->"321d3b9c-1ea4-4ef6-b307-\
1eb4bdc603fe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSInitialize", "[", 
   RowBox[{"\"\<STVKPlaneStrain2D\>\"", ",", 
    RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C++\>\""}], ",", 
    RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Optimal\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"\"\<STVKPlaneStrain2D\>\"", ",", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "2", "]"}], ",", 
      RowBox[{"F$$", "[", "9", "]"}], ",", 
      RowBox[{"Sig$$", "[", "9", "]"}], ",", 
      RowBox[{"Cmat$$", "[", 
       RowBox[{"9", ",", "9"}], "]"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Emod", ",", "\[Nu]"}], "}"}], "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"MaterialData$$", "[", "1", "]"}], ",", 
      RowBox[{"MaterialData$$", "[", "2", "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Lambda]", ",", "\[Mu]"}], "}"}], "\[DoubleRightTee]", 
   RowBox[{"SMSHookeToLame", "[", 
    RowBox[{"Emod", ",", "\[Nu]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalF]vec", "\[RightTee]", 
   RowBox[{"SMSReal", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"F$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "9"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalF]", "=", 
   RowBox[{"Partition", "[", 
    RowBox[{"\[DoubleStruckCapitalF]vec", ",", "3"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J", "\[DoubleRightTee]", 
   RowBox[{"SMSDet", "[", "\[DoubleStruckCapitalF]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalE]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{"1", "/", "2"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"\[DoubleStruckCapitalF]", "\[Transpose]"}], ".", 
       "\[DoubleStruckCapitalF]"}], "-", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalS]", "\[DoubleRightTee]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"\[Lambda]", " ", 
      RowBox[{"Tr", "[", "\[DoubleStruckCapitalE]", "]"}], 
      RowBox[{"IdentityMatrix", "[", "3", "]"}]}], "+", 
     RowBox[{"2", " ", "\[Mu]", " ", "\[DoubleStruckCapitalE]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "\[DoubleRightTee]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "J"}], ")"}], " ", 
    RowBox[{"\[DoubleStruckCapitalF]", ".", "\[DoubleStruckCapitalS]", ".", 
     RowBox[{"\[DoubleStruckCapitalF]", "\[Transpose]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]vec", "=", 
   RowBox[{"Flatten", "[", "\[Sigma]", "]"}]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"SMSExport", "[", 
    RowBox[{"\[Sigma]vec", ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sig$$", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "9"}], "}"}]}], "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SMSD", "[", 
        RowBox[{
         RowBox[{
         "\[Sigma]vec", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{
         "\[CurlyEpsilon]vec", "\[LeftDoubleBracket]", "j", 
          "\[RightDoubleBracket]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "3"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"SMSExport", "[", 
     RowBox[{
      RowBox[{
      "Flatten", "[", 
       "\[DoubleStruckD]\[Sigma]\[DoubleStruckD]\[CurlyEpsilon]", "]"}], ",", 
      
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Exp$$", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "5", ",", "16"}], "}"}]}], "]"}]}], "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSWrite", "[", 
   RowBox[{"\"\<LocalAuxiliaryVariables\>\"", "\[Rule]", "True"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7019422334683743`*^9, 3.701942240555492*^9}, {
   3.701942551827433*^9, 3.7019425973402653`*^9}, 3.701942657899887*^9, {
   3.701942771968176*^9, 3.701942954385462*^9}, {3.701944266809721*^9, 
   3.701944420250247*^9}, {3.7019445990421953`*^9, 3.701944599570176*^9}, {
   3.701944660346901*^9, 3.70194477540685*^9}, {3.701955726306006*^9, 
   3.7019557287308893`*^9}, {3.701955760567013*^9, 3.701955763836216*^9}, {
   3.701955819458672*^9, 3.701955822311013*^9}, {3.704201913057893*^9, 
   3.704201913157365*^9}, {3.704202100890979*^9, 3.704202146351118*^9}, {
   3.704202634440819*^9, 3.704202640132511*^9}, {3.704217798786852*^9, 
   3.704217819290286*^9}, {3.704218573992752*^9, 3.70421858640561*^9}, {
   3.704453218676137*^9, 3.7044532579484673`*^9}, {3.704453315091712*^9, 
   3.704453383782406*^9}, 3.704513741771583*^9, {3.704515797861112*^9, 
   3.7045158628588753`*^9}, {3.7045159165994053`*^9, 3.704515963792543*^9}, {
   3.704516027311037*^9, 3.704516046615904*^9}, {3.7045160797269497`*^9, 
   3.7045160968497143`*^9}, {3.704516141041891*^9, 3.704516172774065*^9}, {
   3.7045162078456173`*^9, 3.704516365739004*^9}, {3.704516493039452*^9, 
   3.704516501224061*^9}, {3.7045169809462557`*^9, 3.704517035591731*^9}, {
   3.704535860102519*^9, 3.704535860744782*^9}, {3.704535959453867*^9, 
   3.7045360998216133`*^9}, {3.704536215915635*^9, 3.704536269991667*^9}, 
   3.704536389908112*^9, {3.7045365036142178`*^9, 3.7045365790668383`*^9}, {
   3.704536735560103*^9, 3.704536738897978*^9}, {3.704536770466611*^9, 
   3.7045369008464937`*^9}, 3.704536982085279*^9, {3.704544490268446*^9, 
   3.704544623680798*^9}, {3.704544728826064*^9, 3.704544729455533*^9}, {
   3.704553052376581*^9, 3.704553056288372*^9}, {3.704555019650963*^9, 
   3.704555042754455*^9}, {3.704615454633226*^9, 3.704615473779351*^9}, {
   3.704616514913865*^9, 3.704616551846909*^9}, 3.704963196886642*^9, {
   3.767671638965519*^9, 3.7676716667878857`*^9}, {3.7678438777695017`*^9, 
   3.7678439028250113`*^9}, {3.767854050966913*^9, 3.7678541558615437`*^9}, {
   3.767854189445915*^9, 3.767854258071858*^9}, 3.767854302526312*^9, {
   3.7678543419698477`*^9, 3.767854401822257*^9}, {3.7678544634173307`*^9, 
   3.767854471415948*^9}, {3.767854655424312*^9, 3.767854724903532*^9}, 
   3.767855019748522*^9, 3.767858231452024*^9, {3.7678722477328157`*^9, 
   3.76787227185513*^9}, {3.767872379483078*^9, 3.767872384129302*^9}, {
   3.76874650280758*^9, 3.76874656165804*^9}, {3.768746599673617*^9, 
   3.768746700664364*^9}, {3.768746799417774*^9, 3.768746863068692*^9}, {
   3.768746949650963*^9, 3.768747048851878*^9}, {3.768747106079649*^9, 
   3.7687472224326077`*^9}, {3.768747316857086*^9, 3.76874739157579*^9}, {
   3.768747441232719*^9, 3.768747465560882*^9}, {3.76874761030118*^9, 
   3.7687476577671537`*^9}, {3.768747693775981*^9, 3.768747733807246*^9}, {
   3.7687491506589003`*^9, 3.768749198679803*^9}},
 CellLabel->
  "In[183]:=",ExpressionUUID->"0dd1c630-14b1-4057-ad63-1c077c9fce3c"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox["\"File: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"\"STVKPlaneStrain2D.cpp\"",
       StyleBox["\"  Size: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"2154",StyleBox[
       "\"  Time: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"1"},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"Method\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["\<\"STVKPlaneStrain2D\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["\<\"No.Formulae\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "23"},
        {
         StyleBox["\<\"No.Leafs\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "886"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{"Columns" -> {True, True}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Rows" -> {True, True}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.768747659010727*^9, {3.7687477103610888`*^9, 3.7687477366194677`*^9}, 
   3.76874920222353*^9, 3.769617423900982*^9},
 CellLabel->
  "During evaluation of \
In[183]:=",ExpressionUUID->"c9f54875-e954-4f19-bb83-0fa0c5d430e8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Material 3D J2 FiniteStrain", "Title",
 CellChangeTimes->{{3.7678722273326683`*^9, 3.767872232631587*^9}, {
  3.7687464402495003`*^9, 3.768746441186487*^9}, {3.7687464919864883`*^9, 
  3.768746492835479*^9}, {3.7687491422917643`*^9, 3.768749143878159*^9}, {
  3.768749886631278*^9, 3.768749916970417*^9}, {3.768808617534038*^9, 
  3.7688086236645412`*^9}, {3.769668720371842*^9, 
  3.76966872105684*^9}},ExpressionUUID->"d0645cbb-5c75-4e12-94d0-\
0df5355fc01a"],

Cell[CellGroupData[{

Cell["Material Info", "Subsection",
 CellChangeTimes->{{3.769671228029265*^9, 
  3.769671257241468*^9}},ExpressionUUID->"9405cc7e-6170-4e4f-afa5-\
3b3772fccbd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "MaterialInfo", "=", 
   "\"\<\n/*------------------------------------------------------------------\
------------------------------\n\
------------------------------------------------------------------------------\
--------------------\nMaterial: J2 finite strain plasticity (rate \
independent)\nInput:   d[6 ]  = [Emod, nu, y0, yinf, Kh, dh]\n         F[9 ]  \
= [F11, F12, F13, F21, F22, F23, F31, F32, F33]\n         h[10]  = \
[Fpinv11-1, Fpinv12, Fpinv13, Fpinv21, Fpinv22-1, Fpinv23, Fpinv31, Fpinv32, \
\n                   Fpinv33-1, alpha]\nOutput:  P[9 ]  = [P11, P12, P13, \
P21, P22, P23, P31, P32, P33]\n         dPdF[81] = [dP11dF11, dP11dF12, \
dP11dF13, dP11dF21, ..., dP11dF33,\n                     dP12dF11, dP12dF12, \
dP12dF13, dP12dF21, ..., dP12dF33,\n                     dP13dF11, dP13dF12, \
dP13dF13, dP13dF21, ..., dP13dF33,\n                     dP21dF11, dP21dF12, \
dP21dF13, dP21dF21, ..., dP21dF33,\n                     ...\n                \
     dP33dF11, dP33dF12, dP33dF13, dP33dF21, ..., dP33dF33]\n         \
AdditionalData[20] = [\n                                0  -> Plastic \
indicator (<100 -> elastic, >100 -> platsic)\n                                \
1  -> Divergence indicator (<100 ->convergence, >100 ->divergence)\n          \
                      2  -> number of required iterations\n                   \
             3  -> Initial TauMises\n                                4  -> \
Initial YieldMises\n                                5  -> Final TauMises\n    \
                            6  -> Final YieldMises\n                          \
      7...12  -> Final Tau (Symmetric) = [Tau11, Tau12, Tau13, \n             \
                                                       Tau22, Tau23, Tau33]\n \
                             ]\nLegend: Emod -> Youngs modulus\n        nu   \
-> Possions ratio\n        y0   -> initial yield surface (kirchhoff stress \
Tau)\n        yinf -> saturated yield stress (kirchhoff stress Tau, \
saturation by exp. hardening)\n        Kh   -> linear hardening coefficient\n \
       dh   -> exponential hardening coefficient\n        Fxy  -> deformation \
gradient\n        Fpinvxy -> inverse pointwise plastic part of the deformatin \
gradient\n        h[]  -> pointwise material history field\n        Pxy  -> \
1.st Piola Kirchhoff stress\n        Tauxy-> Kirchhoff stress\n        \
alpha-> accumulated plastic strain\nSome Theory aspects:\n\
VonMisesYieldSurface: (yinf+(y0-yinf)Exp[-dh alpha]+Kh alpha)\n\
------------------------------------------------------------------------------\
--------------------\n\
------------------------------------------------------------------------------\
------------------*/ \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.76966538191363*^9, 3.7696653833979893`*^9}, {
  3.7696655190540123`*^9, 3.7696658298831997`*^9}, {3.769665863231221*^9, 
  3.769665903751562*^9}, {3.7696660903022537`*^9, 3.769666269236278*^9}, {
  3.7696663041458597`*^9, 3.769666702385084*^9}, {3.769666738378254*^9, 
  3.769666792627948*^9}, {3.7696678688397083`*^9, 3.769668062623261*^9}, {
  3.769668320829296*^9, 3.7696683604261703`*^9}, {3.76966846268929*^9, 
  3.769668516659881*^9}, {3.7696687679409943`*^9, 3.769668846466639*^9}, {
  3.769669052740471*^9, 3.769669074169859*^9}, {3.769669122376998*^9, 
  3.769669126862465*^9}, {3.769671109703744*^9, 3.7696711293093967`*^9}, {
  3.769671298920957*^9, 3.769671360537642*^9}, {3.7696721557096777`*^9, 
  3.769672156271014*^9}},
 CellLabel->
  "In[366]:=",ExpressionUUID->"692c8963-2086-4e42-8026-bc3aca26f5f5"],

Cell[BoxData["SMTDump"], "Input",
 CellChangeTimes->{{3.769939959719247*^9, 
  3.7699399634398613`*^9}},ExpressionUUID->"81277db9-2dc6-4753-8561-\
900c7f5714cd"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Material Subroutine AceGen Syntax", "Subsection",
 CellChangeTimes->{{3.769671238480013*^9, 
  3.769671248964863*^9}},ExpressionUUID->"4fc4ff44-e9ca-4827-ac7e-\
cca6c4d334f2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PlasticMaterial", "[", 
    RowBox[{"task_", ",", "\[DoubleStruckH]gm_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[DoubleStruckCapitalF]pinv", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "+", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "1", 
             "\[RightDoubleBracket]"}], 
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "4", 
             "\[RightDoubleBracket]"}], 
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "5", 
             "\[RightDoubleBracket]"}]},
           {
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "7", 
             "\[RightDoubleBracket]"}], 
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}], 
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "6", 
             "\[RightDoubleBracket]"}]},
           {
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "8", 
             "\[RightDoubleBracket]"}], 
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "9", 
             "\[RightDoubleBracket]"}], 
            RowBox[{
            "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}
          },
          
          GridBoxDividers->{
           "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
            "Rows" -> {True, {False}, True}, "RowsIndexed" -> {}}], 
         "\[NoBreak]", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Lambda]", "=", 
       RowBox[{
       "\[DoubleStruckH]gm", "\[LeftDoubleBracket]", "10", 
        "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"SMSFreeze", "[", 
       RowBox[{"\[DoubleStruckCapitalF]e", ",", 
        RowBox[{
        "\[DoubleStruckCapitalF]", ".", "\[DoubleStruckCapitalF]pinv"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"SMSFreeze", "[", 
       RowBox[{"\[DoubleStruckCapitalC]e", ",", 
        RowBox[{
         RowBox[{"\[DoubleStruckCapitalF]e", "\[Transpose]"}], ".", 
         "\[DoubleStruckCapitalF]e"}], ",", 
        RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"JF2", "\[DoubleRightTee]", 
       RowBox[{"Det", "[", "\[DoubleStruckCapitalC]e", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalPi]", "\[DoubleRightTee]", 
       RowBox[{"Simplify", "[", 
        RowBox[{
         RowBox[{
          FractionBox["\[Mu]g", "2"], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Tr", "[", "\[DoubleStruckCapitalC]e", "]"}], "-", "3", 
            "-", 
            RowBox[{"Log", "[", "JF2", "]"}]}], ")"}]}], "+", 
         RowBox[{
          FractionBox["\[Lambda]g", "4"], 
          RowBox[{"(", 
           RowBox[{"JF2", "-", "1", "-", 
            RowBox[{"Log", "[", "JF2", "]"}]}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"task", "\[Equal]", "\"\<\[CapitalPi]\>\""}], ",", 
        RowBox[{"Return", "[", "\[CapitalPi]", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SMSFreeze", "[", 
       RowBox[{"\[Tau]", ",", 
        RowBox[{"2", 
         RowBox[{"\[DoubleStruckCapitalF]e", ".", 
          RowBox[{"SMSD", "[", 
           RowBox[{"\[CapitalPi]", ",", "\[DoubleStruckCapitalC]e", ",", 
            RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], ".", 
          RowBox[{"\[DoubleStruckCapitalF]e", "\[Transpose]"}]}]}], ",", 
        RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"WARUM", " ", "NICHT", " ", "MIT", " ", "\[Sigma]"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dev\[Tau]", "\[DoubleRightTee]", 
       RowBox[{"\[Tau]", "-", 
        RowBox[{
         FractionBox["1", "3"], 
         RowBox[{"Tr", "[", "\[Tau]", "]"}], 
         RowBox[{"IdentityMatrix", "[", "3", "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]Mises", "\[DoubleRightTee]", 
       RowBox[{"SMSSqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "/", "2"}], ")"}], 
         RowBox[{"Tr", "[", 
          RowBox[{"dev\[Tau]", ".", "dev\[Tau]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Tau]y", "\[DoubleRightTee]", 
       RowBox[{"(", 
        RowBox[{"y\[Infinity]", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y0", "-", "y\[Infinity]"}], ")"}], 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "\[Delta]h"}], " ", "\[Lambda]"}], "]"}]}], "+", 
         RowBox[{"Kh", " ", "\[Lambda]"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptF]", "\[DoubleRightTee]", 
       RowBox[{"\[Tau]Mises", "-", "\[Tau]y"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"task", "\[Equal]", "\"\<P\>\""}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"SMSD", "[", 
          RowBox[{"\[CapitalPi]", ",", "\[DoubleStruckCapitalF]", ",", 
           RowBox[{"\"\<Constant\>\"", "\[Rule]", "\[DoubleStruckH]gm"}]}], 
          "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"task", "\[Equal]", "\"\<f\>\""}], ",", 
        RowBox[{"Return", "[", "\[ScriptF]", "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[DoubleStruckN]", "\[DoubleRightTee]", 
       RowBox[{"Simplify", "[", 
        RowBox[{"SMSD", "[", 
         RowBox[{"\[ScriptF]", ",", "\[Tau]", ",", 
          RowBox[{"\"\<Symmetric\>\"", "\[Rule]", "True"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"\[DoubleStruckCapitalF]pinvn", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "3", "]"}], "+", 
        RowBox[{"(", "\[NoBreak]", GridBox[{
           {
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "4", "\[RightDoubleBracket]"}], 
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "5", "\[RightDoubleBracket]"}]},
           {
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}], 
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "6", "\[RightDoubleBracket]"}]},
           {
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "8", "\[RightDoubleBracket]"}], 
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "9", "\[RightDoubleBracket]"}], 
            RowBox[{
            "hn", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}
          },
          
          GridBoxDividers->{
           "Columns" -> {True, {False}, True}, "ColumnsIndexed" -> {}, 
            "Rows" -> {True, {False}, True}, "RowsIndexed" -> {}}], 
         "\[NoBreak]", ")"}]}]}], ";", 
      RowBox[{"\[Lambda]n", "=", 
       RowBox[{
       "hn", "\[LeftDoubleBracket]", "10", "\[RightDoubleBracket]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[DoubleStruckCapitalQ]F", "=", 
       RowBox[{"Simplify", "[", 
        RowBox[{"\[DoubleStruckCapitalF]e", "-", 
         RowBox[{
          RowBox[{"SMSMatrixExp", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{"\[Lambda]", "-", "\[Lambda]n"}], ")"}]}], 
             RowBox[{"Sqrt", "[", 
              RowBox[{"3", "/", "2"}], "]"}], "\[DoubleStruckN]"}], ",", 
            "1"}], "]"}], ".", "\[DoubleStruckCapitalF]", ".", 
          "\[DoubleStruckCapitalF]pinvn"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"task", "\[Equal]", "\"\<Q\>\""}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"\[DoubleStruckCapitalQ]F", "\[LeftDoubleBracket]", 
            RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
           "\[ScriptF]"}], "}"}], "]"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.768799733412269*^9, 3.768799734066764*^9}, {
  3.7696684394276323`*^9, 3.7696684462085238`*^9}, {3.769828906172163*^9, 
  3.769828949477169*^9}, {3.769828987251298*^9, 
  3.769829001504751*^9}},ExpressionUUID->"ecc573e2-7795-4879-8a2b-\
168e7718e9be"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Generation", "Subsection",
 CellChangeTimes->{{3.769671282896003*^9, 
  3.7696712857638407`*^9}},ExpressionUUID->"5f997b32-b184-4a81-bb7e-\
cb646f196827"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"<<", "AceGen`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSInitialize", "[", 
   RowBox[{"\"\<J2FiniteStrain3D\>\"", ",", 
    RowBox[{"\"\<Language\>\"", "\[Rule]", "\"\<C++\>\""}], ",", 
    RowBox[{"\"\<Mode\>\"", "\[Rule]", "\"\<Optimal\>\""}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSModule", "[", 
   RowBox[{"\"\<J2FiniteStrain3D\>\"", ",", 
    RowBox[{"Real", "[", 
     RowBox[{
      RowBox[{"d$$", "[", "6", "]"}], ",", 
      RowBox[{"F$$", "[", "9", "]"}], ",", 
      RowBox[{"h$$", "[", "10", "]"}], ",", 
      RowBox[{"P$$", "[", "9", "]"}], ",", 
      RowBox[{"dPdF$$", "[", "81", "]"}], ",", 
      RowBox[{"AdditionalData$$", "[", "20", "]"}]}], "]"}], ",", 
    RowBox[{"\"\<Verbatim\>\"", "\[Rule]", "MaterialInfo"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", "\"\<bool debugmaterialparameters=false;\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", "\"\<bool debugaceroutine=false;\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSVerbatim", "[", "\"\<bool debugplastic=false;\>\"", "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "Eg", ",", "\[Nu]g", ",", "y0", ",", "y\[Infinity]", ",", "Kh", ",", 
     "\[Delta]h"}], "}"}], "\[RightTee]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SMSReal", "[", 
      RowBox[{"d$$", "[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugmaterialparameters) std::cout << 'Emod    : '<<\>\"", ",", 
    " ", "Eg", ",", " ", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugmaterialparameters) std::cout << 'nu      : '<<\>\"", ",", 
    " ", "\[Nu]g", ",", " ", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugmaterialparameters) std::cout << 'y0      : '<<\>\"", ",", 
    " ", "y0", ",", " ", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugmaterialparameters) std::cout << 'yinf    : '<<\>\"", ",", 
    " ", "y\[Infinity]", ",", " ", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugmaterialparameters) std::cout << 'Kh      : '<<\>\"", ",", 
    " ", "Kh", ",", " ", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugmaterialparameters) std::cout << 'del_h   : '<<\>\"", ",", 
    "\[Delta]h", ",", " ", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Lambda]g", ",", "\[Mu]g"}], "}"}], "\[DoubleRightTee]", 
    RowBox[{"SMSHookeToLame", "[", 
     RowBox[{"Eg", ",", "\[Nu]g"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hn", "\[RightTee]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"SMSReal", "[", 
       RowBox[{"h$$", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fvec", "\[RightTee]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"SMSReal", "[", 
      RowBox[{"F$$", "[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "9"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSFreeze", "[", 
   RowBox[{"\[DoubleStruckCapitalF]", ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"Fvec", ",", "3"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckR]g", "=", 
    RowBox[{"SMSVariables", "[", "\[DoubleStruckCapitalF]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptF]tr", "\[DoubleRightTee]", 
   RowBox[{"PlasticMaterial", "[", 
    RowBox[{"\"\<f\>\"", ",", "hn"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugaceroutine) std::cout << 'Initial MisesTau:' <<\>\"", ",", 
    "\[Tau]Mises", ",", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[Tau]Mises", ",", 
    RowBox[{"AdditionalData$$", "[", "4", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSExport", "[", 
    RowBox[{"\[Tau]y", ",", 
     RowBox[{"AdditionalData$$", "[", "5", "]"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSIf", "[", 
   RowBox[{"\[ScriptF]tr", "<", 
    SuperscriptBox["10", 
     RowBox[{"-", "10"}]]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugaceroutine) std::cout << 'Elastic'<< std::endl;\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"0", ",", 
    RowBox[{"AdditionalData$$", "[", "1", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckH]g", "\[DoubleLeftTee]", "hn"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlasticIdicator", "\[DoubleLeftTee]", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSElse", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"1000", ",", 
    RowBox[{"AdditionalData$$", "[", "1", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugaceroutine) std::cout << 'Plastic'<< std::endl;\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugplastic) std::cout << 'Plastic'<< std::endl;\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckH]gb", "\[DoubleLeftTee]", "hn"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LocalDivergence", "\[DoubleLeftTee]", "0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSDo", "[", 
    RowBox[{"SubIg", ",", "1", ",", "51", ",", "1", ",", 
     RowBox[{"{", 
      RowBox[{"\[DoubleStruckH]gb", ",", "LocalDivergence"}], "}"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalQ]g", "\[DoubleRightTee]", 
   RowBox[{"PlasticMaterial", "[", 
    RowBox[{"\"\<Q\>\"", ",", "\[DoubleStruckH]gb"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalA]g", "\[DoubleRightTee]", 
   RowBox[{"SMSD", "[", 
    RowBox[{"\[DoubleStruckCapitalQ]g", ",", "\[DoubleStruckH]gb"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LU", "\[DoubleRightTee]", 
   RowBox[{"SMSLUFactor", "[", "\[DoubleStruckCapitalA]g", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalDelta]\[DoubleStruckH]", "\[DoubleRightTee]", 
    RowBox[{"SMSLUSolve", "[", 
     RowBox[{"LU", ",", 
      RowBox[{"-", "\[DoubleStruckCapitalQ]g"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "update", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[DoubleStruckH]gb", "\[LeftTee]", 
    RowBox[{"\[DoubleStruckH]gb", "+", "\[CapitalDelta]\[DoubleStruckH]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"on", " ", "convergency"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSIf", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
     "\[CapitalDelta]\[DoubleStruckH]", ".", 
      "\[CapitalDelta]\[DoubleStruckH]"}], "]"}], "<", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugaceroutine) std::cout << '   iteration converged!'<< \
std::endl;\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugaceroutine) std::cout << '   iteration : '<<\>\"", ",", 
    "SubIg", ",", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugplastic) std::cout << '   iteration converged!'<< std::endl;\
\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugplastic) std::cout << '   iteration : '<<\>\"", ",", "SubIg",
     ",", "\"\<<< std::endl;\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D\[DoubleStruckH]gDr", "\[DoubleLeftTee]", 
   RowBox[{"SMSLUSolve", "[", 
    RowBox[{"LU", ",", 
     RowBox[{"-", 
      RowBox[{"SMSD", "[", 
       RowBox[{"\[DoubleStruckCapitalQ]g", ",", "\[DoubleStruckR]g", ",", 
        RowBox[{"\"\<Constant\>\"", "\[Rule]", "\[DoubleStruckH]gb"}]}], 
       "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"0", ",", 
    RowBox[{"AdditionalData$$", "[", "2", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"SubIg", ",", 
    RowBox[{"AdditionalData$$", "[", "3", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSBreak", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSEndIf", "[", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"on", " ", "non"}], "-", "convergency"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSIf", "[", 
   RowBox[{"SubIg", "\[Equal]", "50"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugaceroutine) std::cout << '   iteration diverged!!!!' << \
std::endl;\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "SMSVerbatim", "[", 
   "\"\<if (debugplastic) std::cout << '   iteration diverged!!!!' << \
std::endl;\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LocalDivergence", "\[LeftTee]", 
   SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"1000", ",", 
    RowBox[{"AdditionalData$$", "[", "2", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"SubIg", ",", 
    RowBox[{"AdditionalData$$", "[", "3", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSEndIf", "[", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSEndDo", "[", 
   RowBox[{"\[DoubleStruckH]gb", ",", "D\[DoubleStruckH]gDr"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlasticIdicator", "\[LeftTee]", 
   SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckH]g", "\[LeftTee]", 
   RowBox[{"SMSFreeze", "[", 
    RowBox[{"\[DoubleStruckH]gb", ",", 
     RowBox[{"\"\<Dependency\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\[DoubleStruckR]g", ",", "D\[DoubleStruckH]gDr"}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSEndIf", "[", 
    RowBox[{
    "\[DoubleStruckH]g", ",", "PlasticIdicator", ",", "LocalDivergence"}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[DoubleStruckCapitalP]", "\[DoubleRightTee]", 
   RowBox[{"PlasticMaterial", "[", 
    RowBox[{"\"\<P\>\"", ",", "\[DoubleStruckH]g"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[Tau]Mises", ",", 
    RowBox[{"AdditionalData$$", "[", "6", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[Tau]y", ",", 
    RowBox[{"AdditionalData$$", "[", "7", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Tau]", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"\[Tau]", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"\[Tau]", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"\[Tau]", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"\[Tau]", "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
      RowBox[{"\[Tau]", "\[LeftDoubleBracket]", 
       RowBox[{"3", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"AdditionalData$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "8", ",", "13"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSVerbatim", "[", 
   RowBox[{
   "\"\<if (debugaceroutine) std::cout << 'Final MisesTau:' << \>\"", ",", 
    "\[Tau]Mises", ",", "\"\<<< std::endl;\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SMSVerbatim", "[", 
    RowBox[{
    "\"\<if (debugplastic) std::cout << 'Final MisesTau:' << \>\"", ",", 
     "\[Tau]Mises", ",", "\"\<<< std::endl;\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Pvec", "\[DoubleRightTee]", 
    RowBox[{"Flatten", "[", "\[DoubleStruckCapitalP]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"dPdF", "\[DoubleRightTee]", 
     RowBox[{"SMSD", "[", 
      RowBox[{"Pvec", ",", "Fvec", ",", 
       RowBox[{"\"\<Method\>\"", "\[Rule]", "\"\<Forward\>\""}]}], "]"}]}], 
    ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"SMSDet", "[", "\[DoubleStruckCapitalF]", "]"}]}], "\[Tau]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]vec", "=", 
    RowBox[{"Flatten", "[", "\[Sigma]", "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"export", " ", "quantities"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"Pvec", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"P$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "9"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSExport", "[", 
   RowBox[{"\[DoubleStruckH]g", ",", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"h$$", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10"}], "}"}]}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SMSWrite", "[", 
   RowBox[{
    RowBox[{"\"\<LocalAuxiliaryVariables\>\"", "\[Rule]", "True"}], ",", 
    RowBox[{"\"\<IncludeHeaders\>\"", "\[Rule]", 
     RowBox[{"{", "\"\<MPM_AceMaterials.hpp\>\"", "}"}]}], ",", 
    RowBox[{"\"\<OptimizingLoops\>\"", "\[Rule]", "1"}]}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7019422334683743`*^9, 3.701942240555492*^9}, {
   3.701942551827433*^9, 3.7019425973402653`*^9}, 3.701942657899887*^9, {
   3.701942771968176*^9, 3.701942954385462*^9}, {3.701944266809721*^9, 
   3.701944420250247*^9}, {3.7019445990421953`*^9, 3.701944599570176*^9}, {
   3.701944660346901*^9, 3.70194477540685*^9}, {3.701955726306006*^9, 
   3.7019557287308893`*^9}, {3.701955760567013*^9, 3.701955763836216*^9}, {
   3.701955819458672*^9, 3.701955822311013*^9}, {3.704201913057893*^9, 
   3.704201913157365*^9}, {3.704202100890979*^9, 3.704202146351118*^9}, {
   3.704202634440819*^9, 3.704202640132511*^9}, {3.704217798786852*^9, 
   3.704217819290286*^9}, {3.704218573992752*^9, 3.70421858640561*^9}, {
   3.704453218676137*^9, 3.7044532579484673`*^9}, {3.704453315091712*^9, 
   3.704453383782406*^9}, 3.704513741771583*^9, {3.704515797861112*^9, 
   3.7045158628588753`*^9}, {3.7045159165994053`*^9, 3.704515963792543*^9}, {
   3.704516027311037*^9, 3.704516046615904*^9}, {3.7045160797269497`*^9, 
   3.7045160968497143`*^9}, {3.704516141041891*^9, 3.704516172774065*^9}, {
   3.7045162078456173`*^9, 3.704516365739004*^9}, {3.704516493039452*^9, 
   3.704516501224061*^9}, {3.7045169809462557`*^9, 3.704517035591731*^9}, {
   3.704535860102519*^9, 3.704535860744782*^9}, {3.704535959453867*^9, 
   3.7045360998216133`*^9}, {3.704536215915635*^9, 3.704536269991667*^9}, 
   3.704536389908112*^9, {3.7045365036142178`*^9, 3.7045365790668383`*^9}, {
   3.704536735560103*^9, 3.704536738897978*^9}, {3.704536770466611*^9, 
   3.7045369008464937`*^9}, 3.704536982085279*^9, {3.704544490268446*^9, 
   3.704544623680798*^9}, {3.704544728826064*^9, 3.704544729455533*^9}, {
   3.704553052376581*^9, 3.704553056288372*^9}, {3.704555019650963*^9, 
   3.704555042754455*^9}, {3.704615454633226*^9, 3.704615473779351*^9}, {
   3.704616514913865*^9, 3.704616551846909*^9}, 3.704963196886642*^9, {
   3.767671638965519*^9, 3.7676716667878857`*^9}, {3.7678438777695017`*^9, 
   3.7678439028250113`*^9}, {3.767854050966913*^9, 3.7678541558615437`*^9}, {
   3.767854189445915*^9, 3.767854258071858*^9}, 3.767854302526312*^9, {
   3.7678543419698477`*^9, 3.767854401822257*^9}, {3.7678544634173307`*^9, 
   3.767854471415948*^9}, {3.767854655424312*^9, 3.767854724903532*^9}, 
   3.767855019748522*^9, 3.767858231452024*^9, {3.7678722477328157`*^9, 
   3.76787227185513*^9}, {3.767872379483078*^9, 3.767872384129302*^9}, {
   3.76874650280758*^9, 3.76874656165804*^9}, {3.768746599673617*^9, 
   3.768746700664364*^9}, {3.768746799417774*^9, 3.768746863068692*^9}, {
   3.768746949650963*^9, 3.768747048851878*^9}, {3.768747106079649*^9, 
   3.7687472224326077`*^9}, {3.768747316857086*^9, 3.76874739157579*^9}, {
   3.768747441232719*^9, 3.768747465560882*^9}, {3.76874761030118*^9, 
   3.7687476577671537`*^9}, {3.768747693775981*^9, 3.768747733807246*^9}, {
   3.7687491506589003`*^9, 3.768749198679803*^9}, {3.768749963233906*^9, 
   3.768749984572356*^9}, {3.7687500553491*^9, 3.76875005551775*^9}, {
   3.7687502354219437`*^9, 3.768750248253613*^9}, {3.7696195819410763`*^9, 
   3.769619633027039*^9}, 3.7696196962624083`*^9, {3.7696214889346457`*^9, 
   3.769621521492414*^9}, {3.7696651476085653`*^9, 3.7696651728507566`*^9}, {
   3.7696653622156963`*^9, 3.7696653752420597`*^9}, {3.769665958552434*^9, 
   3.769665971759153*^9}, {3.7696689325389757`*^9, 3.7696689334151573`*^9}, {
   3.769669226698958*^9, 3.769669226765463*^9}, 3.769671275886332*^9, {
   3.769672447708034*^9, 3.769672450067267*^9}, 3.769672778069467*^9},
 CellLabel->
  "In[369]:=",ExpressionUUID->"bd908fdb-4d53-41a5-83d0-a3f8e77cb409"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  TemplateBox[{
   "\[ThinSpace]","\" \"",
    "\"Closed form matrix Exponential module for symmetric matrix . Number of \
terms in M is 6 and in f(M) is 6.\"",
    RowBox[{"\" First derivatives df(M)/dM are supported\"", " ", 
      "\" with \""}],"21","\" terms.\"","\" See also: \"",StyleBox[
     TagBox[
      ButtonBox[
      "Matrix Functions", BaseStyle -> {"Link", Medium}, ButtonFunction :> 
       Documentation`HelpLookup[
        "paclet:AceGen/tutorial/Matrix Functions", \
$CellContext`CompletionFunction -> (
          SetOptions[#, DockedCells -> 
           AceCommon`SMCSetUserInterface["DockedCells"]]& )], Evaluator -> 
       Automatic, Method -> "Preemptive"], DisplayForm], Background -> 
     GrayLevel[0.85], StripOnInput -> False]},
   "RowWithSeparators"],
  StripOnInput->False,
  LineColor->RGBColor[0, 1, 0],
  FrontFaceColor->RGBColor[0, 1, 0],
  BackFaceColor->RGBColor[0, 1, 0],
  GraphicsColor->RGBColor[0, 1, 0],
  FontSize->Medium,
  FontColor->RGBColor[0, 1, 0]]], "Print",
 CellChangeTimes->{
  3.768799724924303*^9, 3.7687999172013683`*^9, 3.768800030472858*^9, 
   3.768800173556779*^9, 3.769617425861156*^9, 3.769619846107863*^9, 
   3.7696207419719543`*^9, 3.769620802882833*^9, 3.769620833544886*^9, {
   3.769621200358226*^9, 3.76962121135566*^9}, 3.769621625687294*^9, 
   3.769668976570228*^9, 3.76967137067754*^9, 3.7696724820557947`*^9, 
   3.76967278762427*^9},
 CellLabel->
  "During evaluation of \
In[369]:=",ExpressionUUID->"938ab149-a622-4818-bbb6-2730f18b34aa"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{StyleBox["\"File: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"\"J2FiniteStrain3D.cpp\"",
       StyleBox["\"  Size: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"59034",StyleBox[
       "\"  Time: \"", Bold, 
        RGBColor[0, 0, 1], StripOnInput -> False],"38"},
      "RowDefault"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"Method\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["\<\"J2FiniteStrain3D\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["\<\"No.Formulae\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "980"},
        {
         StyleBox["\<\"No.Leafs\"\>",
          StripOnInput->False,
          LineColor->RGBColor[0, 0, 1],
          FrontFaceColor->RGBColor[0, 0, 1],
          BackFaceColor->RGBColor[0, 0, 1],
          GraphicsColor->RGBColor[0, 0, 1],
          FontWeight->Bold,
          FontColor->RGBColor[0, 0, 1]], "24814"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{"Columns" -> {True, True}},
       GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxDividers->{"Rows" -> {True, True}},
   GridBoxFrame->{"Columns" -> False, "Rows" -> False},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Print",
 CellChangeTimes->{
  3.768799724924303*^9, 3.7687999172013683`*^9, 3.768800030472858*^9, 
   3.768800173556779*^9, 3.769617425861156*^9, 3.769619846107863*^9, 
   3.7696207419719543`*^9, 3.769620802882833*^9, 3.769620833544886*^9, {
   3.769621200358226*^9, 3.76962121135566*^9}, 3.769621625687294*^9, 
   3.769668976570228*^9, 3.76967137067754*^9, 3.7696724820557947`*^9, 
   3.769672837724036*^9},
 CellLabel->
  "During evaluation of \
In[369]:=",ExpressionUUID->"664c5adc-8a9f-416d-88fb-6171f3446037"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CopyFile", "[", 
  RowBox[{
  "\"\<J2FiniteStrain3D.cpp\>\"", ",", 
   "\"\</Users/sash/mpm_2d/ace_mate/J2FiniteStrain3D.cpp\>\"", ",", 
   RowBox[{"OverwriteTarget", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.769672511747451*^9, 3.7696725739859037`*^9}},
 CellLabel->
  "In[441]:=",ExpressionUUID->"6375ad8f-de5e-4c0f-a353-1d7ac595597b"],

Cell[BoxData["\<\"/Users/sash/mpm_2d/ace_mate/J2FiniteStrain3D.cpp\"\>"], \
"Output",
 CellChangeTimes->{{3.7696725677728863`*^9, 3.769672574596345*^9}, 
   3.7696728417354183`*^9},
 CellLabel->
  "Out[441]=",ExpressionUUID->"8e2dde65-ffcf-46a8-9da4-c53c5e0cbd17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FilePrint", "[", "\"\<J2FiniteStrain3D.cpp\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7696198510495443`*^9, 3.769619865351902*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"b046b526-ea25-4f69-812b-ae41795e70ce"],

Cell["\<\
/*************************************************************
* AceGen    6.923 MacOSX (19 Apr 19)                         *
*           Co. J. Korelc  2013           16 Jun 19 12:16:58 *
**************************************************************
User     : Full professional version
Notebook : mate_planestrain_linearelasticity_ctest
Evaluation time                 : 36 s    Mode  : Optimal
Number of formulae              : 979     Method: Automatic
Subroutine                      : J2FiniteStrain3D size: 24809
Total size of Mathematica  code : 24809 subexpressions
Total size of C code            : 58333 bytes */
#include \"sms.h\"

/******************* S U B R O U T I N E *********************/
void J2FiniteStrain3D(double d[6],double F[9],double h[10],double P[9]
     ,double dPdF[9][9],double AdditionalData[20])
{
double v[2650];
int repC1;double MatrixDEXC1[21];double MatrixEXC1[6];double MatrixXC1[6];
int i134,b105,b106,b1076,b2119,b2200;
\\*---------------------------------------------------------------------------\
-----------------------
--------------------------
------------------------------------------------------------------------------\
---------------------
-------------------------
Material: J2 finite strain plasticity (time independent)
Input:   d[6 ]  = [Emod, nu, y0, yinf, Kh, dh]
         F[9 ]  = [F11, F12, F13, F21, F22, F23, F31, F32, F33]
         h[10]  = [Fpinv11-1, Fpinv12, Fpinv13, Fpinv21, Fpinv22-1, Fpinv23, \
Fpinv31, Fpinv32
, Fpinv33-1, alpha]
Output:  P[9 ]  = [P11, P12, P13, P21, P22, P23, P31, P32, P33]
         dPdF[81] = [dP11dF11, dP11dF12, dP11dF13, dP11dF21, ..., dP11dF33,
                     dP12dF11, dP12dF12, dP12dF13, dP12dF21, ..., dP12dF33,
                     dP13dF11, dP13dF12, dP13dF13, dP13dF21, ..., dP13dF33,
                     dP21dF11, dP21dF12, dP21dF13, dP21dF21, ..., dP21dF33,
                     ...
                     dP33dF11, dP33dF12, dP33dF13, dP33dF21, ..., dP33dF33]
         AdditionalData[20] = [
                                0  -> Plastic indicator (<100 -> elastic, \
>100 -> platsic)
                                1  -> Divergence indicator (<100 -> \
convergence, >100 -> divergence
)
                                2  -> number of required iterations
                                3  -> Initial TauMises
                                4  -> Initial YieldMises
                                5  -> Final TauMises
                                6  -> Final YieldMises
                                7...12  -> Final Tau (Symmetric) = [Tau11, \
Tau12, Tau13, Tau22
, Tau23, Tau33]
                              ]
Legend: Emod -> Youngs modulus
        nu   -> Possions ratio
        y0   -> initial yield surface (kirchhoff stress tau)
        yinf -> saturated yield stress (kirchhoff stress tau, saturation by \
exp. hardening)
        Kh   -> linear hardening coefficient
        dh   -> exponential hardening coefficient
        Fxy  -> deformation gradient
        Fpinvxy -> inverse pointwise plastic part of the deformatin gradient
        h[]  -> pointwise material history field
        Pxy  -> 1.st Piola Kirchhoff stress
        alpha-> accumulated plastic strain
Some Theory aspects:
VonMisesYieldSurface: (yinf+(y0-yinf)Exp[-dh alpha]+Kh alpha)
------------------------------------------------------------------------------\
---------------------
-------------------------
------------------------------------------------------------------------------\
---------------------
-------------------------* 
bool debugmaterialparameters=false;
bool debugaceroutine=false;
bool debugplastic=false;
v[2217]=d[0]/(1e0+d[1]);
v[189]=d[2]-d[3];
if (debugmaterialparameters) std::cout << \"Emod    : \"<<d[0]<< std::endl;
if (debugmaterialparameters) std::cout << \"nu      : \"<<d[1]<< std::endl;
if (debugmaterialparameters) std::cout << \"y0      : \"<<d[2]<< std::endl;
if (debugmaterialparameters) std::cout << \"yinf    : \"<<d[3]<< std::endl;
if (debugmaterialparameters) std::cout << \"Kh      : \"<<d[4]<< std::endl;
if (debugmaterialparameters) std::cout << \"del_h   : \"<<d[5]<< std::endl;
v[16]=(d[1]*v[2217])/(1e0-2e0*d[1]);
v[156]=v[16]/4e0;
v[157]=-v[16]-v[2217];
v[50]=1e0+h[0];
v[52]=1e0+h[1];
v[54]=1e0+h[2];
v[47]=F[1]*h[6]+F[2]*h[7]+F[0]*v[50];
v[2224]=(v[47]*v[47]);
v[48]=F[0]*h[3]+F[2]*h[8]+F[1]*v[52];
v[2223]=(v[48]*v[48]);
v[49]=F[0]*h[4]+F[1]*h[5]+F[2]*v[54];
v[2222]=(v[49]*v[49]);
v[2220]=v[47]*v[49];
v[51]=F[4]*h[6]+F[5]*h[7]+F[3]*v[50];
v[53]=F[3]*h[3]+F[5]*h[8]+F[4]*v[52];
v[55]=F[3]*h[4]+F[4]*h[5]+F[5]*v[54];
v[56]=F[7]*h[6]+F[8]*h[7]+F[6]*v[50];
v[57]=F[6]*h[3]+F[8]*h[8]+F[7]*v[52];
v[58]=F[6]*h[4]+F[7]*h[5]+F[8]*v[54];
v[59]=v[2224]+(v[51]*v[51])+(v[56]*v[56]);
v[60]=v[47]*v[48]+v[51]*v[53]+v[56]*v[57];
v[74]=(v[60]*v[60]);
v[61]=v[2220]+v[51]*v[55]+v[56]*v[58];
v[76]=(v[61]*v[61]);
v[62]=v[2223]+(v[53]*v[53])+(v[57]*v[57]);
v[63]=v[48]*v[49]+v[53]*v[55]+v[57]*v[58];
v[69]=2e0*v[61]*v[63];
v[64]=v[2222]+(v[55]*v[55])+(v[58]*v[58]);
v[2218]=-(v[63]*v[63])+v[62]*v[64];
v[68]=v[156]+v[157]/(4e0*(v[2218]*v[59]+v[60]*v[69]-v[64]*v[74]-v[62]*v[76]));\

v[70]=(v[48]*v[68])/2e0;
v[71]=2e0*v[60]*v[61]-2e0*v[59]*v[63];
v[80]=(v[68]*v[71])/2e0;
v[72]=-((v[61]*v[62]-v[60]*v[63])*v[68]);
v[73]=v[2217]/4e0;
v[83]=v[2218]*v[68]+v[73];
v[82]=v[73]+v[68]*(v[59]*v[64]-v[76]);
v[81]=v[73]+v[68]*(v[59]*v[62]-v[74]);
v[90]=v[56]*v[72]+v[57]*v[80]+v[58]*v[81];
v[86]=v[51]*v[72]+v[53]*v[80]+v[55]*v[81];
v[75]=-2e0*v[60]*v[64]+v[69];
v[79]=(v[68]*v[75])/2e0;
v[92]=v[58]*v[72]+v[57]*v[79]+v[56]*v[83];
v[91]=v[56]*v[79]+v[58]*v[80]+v[57]*v[82];
v[88]=v[55]*v[72]+v[53]*v[79]+v[51]*v[83];
v[87]=v[51]*v[79]+v[55]*v[80]+v[53]*v[82];
v[78]=2e0*(2e0*v[49]*v[70]*v[71]+2e0*v[2220]*v[72]+2e0*v[47]*v[70]*v[75]+v[\
2222]*v[81]
 +v[2223]*v[82]+v[2224]*v[83]);
v[89]=2e0*(v[55]*v[86]+v[53]*v[87]+v[51]*v[88]);
v[94]=2e0*(v[58]*v[90]+v[57]*v[91]+v[56]*v[92]);
v[96]=(-v[78]-v[89]-v[94])/3e0;
v[99]=sqrt(0.15e1*(8e0*Power(v[49]*v[86]+v[48]*v[87]+v[47]*v[88],2)+8e0*Power(\
v[49]*v[90]
 +v[48]*v[91]+v[47]*v[92],2)+8e0*Power(v[55]*v[90]+v[53]*v[91]+v[51]*v[92],2)+\
Power(v[78]+v[96],2)
 +Power(v[89]+v[96],2)+Power(v[94]+v[96],2)));
v[100]=d[3]+d[4]*h[9]+v[189]*exp(-(d[5]*h[9]));
if (debugaceroutine) std::cout << \"Initial MisesTau:\" <<v[99]<< std::endl;
AdditionalData[3]=v[99];
AdditionalData[4]=v[100];
b105=(-v[100]+v[99])<0.1e-9;
if(b105){
 if (debugaceroutine) std::cout << \"Elastic\"<< std::endl;
 AdditionalData[0]=0e0;
 v[109]=h[0];
 v[110]=h[1];
 v[111]=h[2];
 v[112]=h[3];
 v[113]=h[4];
 v[114]=h[5];
 v[115]=h[6];
 v[116]=h[7];
 v[117]=h[8];
 v[118]=h[9];
} else {
 AdditionalData[0]=1000e0;
 if (debugaceroutine) std::cout << \"Plastic\"<< std::endl;
 if (debugplastic) std::cout << \"Plastic\"<< std::endl;
 v[123]=h[0];
 v[124]=h[1];
 v[125]=h[2];
 v[126]=h[3];
 v[127]=h[4];
 v[128]=h[5];
 v[129]=h[6];
 v[130]=h[7];
 v[131]=h[8];
 v[132]=h[9];
 for(i134=1;i134<=51;i134++){
  v[138]=1e0+v[123];
  v[140]=1e0+v[124];
  v[142]=1e0+v[125];
  v[2275]=-(v[189]*exp(-(d[5]*v[132])));
  v[135]=F[1]*v[129]+F[2]*v[130]+F[0]*v[138];
  v[2248]=(v[135]*v[135]);
  v[136]=F[0]*v[126]+F[2]*v[131]+F[1]*v[140];
  v[2249]=(v[136]*v[136]);
  v[137]=F[0]*v[127]+F[1]*v[128]+F[2]*v[142];
  v[2251]=v[136]*v[137];
  v[2250]=(v[137]*v[137]);
  v[139]=F[4]*v[129]+F[5]*v[130]+F[3]*v[138];
  v[141]=F[3]*v[126]+F[5]*v[131]+F[4]*v[140];
  v[143]=F[3]*v[127]+F[4]*v[128]+F[5]*v[142];
  v[144]=F[7]*v[129]+F[8]*v[130]+F[6]*v[138];
  v[273]=F[2]*v[135]+F[5]*v[139]+F[8]*v[144];
  v[270]=F[0]*v[135]+F[3]*v[139]+F[6]*v[144];
  v[269]=F[1]*v[135]+F[4]*v[139]+F[7]*v[144];
  v[267]=2e0*v[273];
  v[266]=2e0*v[269];
  v[265]=2e0*v[270];
  v[145]=F[6]*v[126]+F[8]*v[131]+F[7]*v[140];
  v[2227]=F[0]*v[136]+F[3]*v[141]+F[6]*v[145];
  v[2226]=F[1]*v[136]+F[4]*v[141]+F[7]*v[145];
  v[2225]=F[2]*v[136]+F[5]*v[141]+F[8]*v[145];
  v[291]=2e0*v[2225];
  v[290]=2e0*v[2227];
  v[289]=2e0*v[2226];
  v[146]=F[6]*v[127]+F[7]*v[128]+F[8]*v[142];
  v[2230]=F[0]*v[137]+F[3]*v[143]+F[6]*v[146];
  v[2229]=F[1]*v[137]+F[4]*v[143]+F[7]*v[146];
  v[2228]=F[2]*v[137]+F[5]*v[143]+F[8]*v[146];
  v[303]=2e0*v[2229];
  v[302]=2e0*v[2230];
  v[301]=2e0*v[2228];
  v[147]=(v[139]*v[139])+(v[144]*v[144])+v[2248];
  v[148]=v[135]*v[136]+v[139]*v[141]+v[144]*v[145];
  v[403]=2e0*v[148]*v[2228];
  v[392]=2e0*v[148]*v[2230];
  v[387]=2e0*v[148]*v[2229];
  v[365]=-(v[148]*v[267])+v[147]*v[291];
  v[278]=2e0*v[148]*v[2225];
  v[277]=2e0*v[148]*v[2226];
  v[367]=-(v[148]*v[265])+v[147]*v[290];
  v[368]=-(v[148]*v[266])+v[147]*v[289];
  v[274]=2e0*v[148]*v[2227];
  v[163]=(v[148]*v[148]);
  v[149]=v[135]*v[137]+v[139]*v[143]+v[144]*v[146];
  v[2238]=2e0*v[149];
  v[371]=2e0*v[149]*v[2225];
  v[369]=2e0*v[149]*v[2226];
  v[362]=2e0*v[149]*v[2227];
  v[288]=2e0*v[149]*v[2228];
  v[287]=2e0*v[149]*v[2229];
  v[364]=-(v[149]*v[266])+v[147]*v[303];
  v[366]=-(v[149]*v[265])+v[147]*v[302];
  v[373]=-(v[149]*v[267])+v[147]*v[301];
  v[283]=2e0*v[149]*v[2230];
  v[165]=(v[149]*v[149]);
  v[150]=(v[141]*v[141])+(v[145]*v[145])+v[2249];
  v[343]=v[147]*v[150]-v[163];
  v[151]=v[141]*v[143]+v[145]*v[146]+v[2251];
  v[2231]=2e0*v[151];
  v[402]=v[151]*v[267];
  v[391]=v[151]*v[265];
  v[386]=v[151]*v[266];
  v[384]=v[148]*v[2231]-v[150]*v[2238];
  v[372]=v[371]-2e0*v[402]+v[403];
  v[370]=v[369]-2e0*v[386]+v[387];
  v[363]=v[362]-2e0*v[391]+v[392];
  v[300]=v[369]+v[386];
  v[428]=v[300]-2e0*v[148]*v[303];
  v[299]=v[362]+v[391];
  v[427]=v[299]-2e0*v[148]*v[302];
  v[298]=v[371]+v[402];
  v[425]=v[298]-2e0*v[148]*v[301];
  v[297]=2e0*v[151]*v[2228];
  v[296]=2e0*v[151]*v[2226];
  v[295]=2e0*v[151]*v[2227];
  v[294]=2e0*v[151]*v[2230];
  v[293]=2e0*v[151]*v[2225];
  v[292]=2e0*v[151]*v[2229];
  v[166]=(v[151]*v[151]);
  v[159]=v[149]*v[2231];
  v[152]=(v[143]*v[143])+(v[146]*v[146])+v[2250];
  v[431]=v[152]*v[267]-v[288];
  v[430]=v[152]*v[291]-v[297];
  v[429]=v[152]*v[289]-v[292];
  v[426]=v[152]*v[265]-v[283];
  v[424]=v[152]*v[266]-v[287];
  v[423]=v[152]*v[290]-v[294];
  v[333]=v[147]*v[152]-v[165];
  v[323]=v[150]*v[152]-v[166];
  v[153]=v[148]*v[159]-v[152]*v[163]-v[150]*v[165]+v[147]*v[323];
  v[314]=-v[157]/(4e0*Power(v[153],2));
  v[322]=v[314]*(v[159]*v[273]+v[148]*v[288]-v[165]*v[291]-v[147]*v[297]+v[\
152]*v[365]);
  v[342]=v[322]*v[333];
  v[321]=v[314]*(v[159]*v[2225]-v[166]*v[267]-v[152]*v[278]+v[148]*v[297]+v[\
150]*v[431]);
  v[360]=(v[136]*v[321])/2e0;
  v[331]=v[321]*v[323];
  v[320]=v[314]*(v[159]*v[2226]-v[166]*v[266]-v[152]*v[277]+v[148]*v[292]+v[\
150]*v[424]);
  v[359]=(v[136]*v[320])/2e0;
  v[330]=v[320]*v[323];
  v[319]=-(v[314]*(v[147]*v[296]-v[148]*v[300]+v[163]*v[303]-v[150]*v[364]));
  v[358]=(v[136]*v[319])/2e0;
  v[349]=v[319]*v[343];
  v[318]=-(v[314]*(v[147]*v[295]-v[148]*v[299]+v[163]*v[302]-v[150]*v[366]));
  v[357]=(v[136]*v[318])/2e0;
  v[348]=v[318]*v[343];
  v[317]=v[314]*(v[159]*v[270]+v[148]*v[283]-v[165]*v[290]-v[147]*v[294]+v[\
152]*v[367]);
  v[337]=v[317]*v[333];
  v[316]=-(v[314]*(v[147]*v[293]-v[148]*v[298]+v[163]*v[301]-v[150]*v[373]));
  v[355]=(v[136]*v[316])/2e0;
  v[346]=v[316]*v[343];
  v[315]=v[314]*(v[159]*v[269]+v[148]*v[287]-v[165]*v[289]-v[147]*v[292]+v[\
152]*v[368]);
  v[335]=v[315]*v[333];
  v[313]=v[314]*(v[159]*v[2227]-v[166]*v[265]-v[152]*v[274]+v[148]*v[294]+v[\
150]*v[426]);
  v[353]=(v[136]*v[313])/2e0;
  v[324]=v[313]*v[323];
  v[158]=v[156]+v[157]/(4e0*v[153]);
  v[2258]=v[158]*v[423];
  v[2257]=v[158]*v[424];
  v[2256]=v[158]*v[426];
  v[2247]=v[158]*v[429];
  v[2246]=v[158]*v[430];
  v[2245]=v[158]*v[431];
  v[2244]=v[158]*v[364];
  v[2243]=v[158]*v[365];
  v[2242]=v[158]*v[366];
  v[2241]=v[158]*v[367];
  v[2240]=v[158]*v[368];
  v[2239]=v[158]*v[373];
  v[2237]=-(v[158]*(-v[293]+v[150]*v[301]));
  v[2236]=-(v[158]*(-v[295]+v[150]*v[302]));
  v[2235]=-(v[158]*(-v[296]+v[150]*v[303]));
  v[2234]=-(v[158]*(v[150]*v[265]-v[274]));
  v[2233]=-(v[158]*(v[150]*v[266]-v[277]));
  v[2232]=-(v[158]*(v[150]*v[267]-v[278]));
  v[404]=(v[322]*v[384]+v[158]*(-2e0*v[149]*v[291]+v[402]+v[403]))/2e0;
  v[401]=(v[2237]+v[321]*v[384])/2e0;
  v[399]=(v[2235]+v[320]*v[384])/2e0;
  v[397]=(v[2233]+v[319]*v[384])/2e0;
  v[395]=(v[2234]+v[318]*v[384])/2e0;
  v[393]=(v[317]*v[384]+v[158]*(-2e0*v[149]*v[290]+v[391]+v[392]))/2e0;
  v[390]=(v[2232]+v[316]*v[384])/2e0;
  v[388]=(v[315]*v[384]+v[158]*(-2e0*v[149]*v[289]+v[386]+v[387]))/2e0;
  v[385]=(v[2236]+v[313]*v[384])/2e0;
  v[361]=(F[2]*v[158]+v[136]*v[322])/2e0;
  v[356]=(F[0]*v[158]+v[136]*v[317])/2e0;
  v[354]=(F[1]*v[158]+v[136]*v[315])/2e0;
  v[352]=v[2243]+v[322]*v[343];
  v[351]=-v[2232]+v[321]*v[343];
  v[350]=-v[2233]+v[320]*v[343];
  v[347]=v[2241]+v[317]*v[343];
  v[345]=v[2240]+v[315]*v[343];
  v[344]=-v[2234]+v[313]*v[343];
  v[341]=v[2245]+v[321]*v[333];
  v[340]=v[2257]+v[320]*v[333];
  v[339]=v[2244]+v[319]*v[333];
  v[338]=v[2242]+v[318]*v[333];
  v[336]=v[2239]+v[316]*v[333];
  v[334]=v[2256]+v[313]*v[333];
  v[332]=v[2246]+v[322]*v[323];
  v[329]=-v[2235]+v[319]*v[323];
  v[328]=-v[2236]+v[318]*v[323];
  v[327]=v[2258]+v[317]*v[323];
  v[326]=-v[2237]+v[316]*v[323];
  v[325]=v[2247]+v[315]*v[323];
  v[172]=v[158]*v[323]+v[73];
  v[171]=v[158]*v[333]+v[73];
  v[2259]=v[136]*v[171];
  v[170]=v[158]*v[343]+v[73];
  v[160]=(v[136]*v[158])/2e0;
  v[2254]=-(v[137]*v[160]);
  v[161]=-2e0*v[147]*v[151]+v[148]*v[2238];
  v[2253]=v[137]*v[161];
  v[2252]=v[160]*v[161]+v[137]*v[170];
  v[382]=(-v[2239]+v[161]*v[322])/2e0;
  v[381]=(v[161]*v[321]+v[158]*v[372])/2e0;
  v[380]=(v[161]*v[320]+v[158]*v[370])/2e0;
  v[379]=(-v[2240]+v[161]*v[319])/2e0;
  v[419]=F[4]*v[170]+v[143]*v[349]+v[141]*v[379]+v[139]*v[397];
  v[410]=F[7]*v[170]+v[146]*v[349]+v[145]*v[379]+v[144]*v[397];
  v[378]=(-v[2241]+v[161]*v[318])/2e0;
  v[418]=F[3]*v[170]+v[143]*v[348]+v[141]*v[378]+v[139]*v[395];
  v[409]=F[6]*v[170]+v[146]*v[348]+v[145]*v[378]+v[144]*v[395];
  v[377]=(-v[2242]+v[161]*v[317])/2e0;
  v[376]=(-v[2243]+v[161]*v[316])/2e0;
  v[416]=F[5]*v[170]+v[143]*v[346]+v[141]*v[376]+v[139]*v[390];
  v[407]=F[8]*v[170]+v[146]*v[346]+v[145]*v[376]+v[144]*v[390];
  v[375]=(-v[2244]+v[161]*v[315])/2e0;
  v[374]=(v[161]*v[313]+v[158]*v[363])/2e0;
  v[169]=(v[158]*v[161])/2e0;
  v[488]=F[4]*v[169];
  v[486]=F[3]*v[169];
  v[483]=F[5]*v[169];
  v[461]=F[7]*v[169];
  v[459]=F[6]*v[169];
  v[456]=F[8]*v[169];
  v[422]=v[143]*v[352]+v[141]*v[382]+v[139]*v[404]+v[483];
  v[417]=v[143]*v[347]+v[141]*v[377]+v[139]*v[393]+v[486];
  v[415]=v[143]*v[345]+v[141]*v[375]+v[139]*v[388]+v[488];
  v[413]=v[146]*v[352]+v[145]*v[382]+v[144]*v[404]+v[456];
  v[408]=v[146]*v[347]+v[145]*v[377]+v[144]*v[393]+v[459];
  v[406]=v[146]*v[345]+v[145]*v[375]+v[144]*v[388]+v[461];
  v[162]=(v[158]*v[384])/2e0;
  v[507]=F[2]*v[162];
  v[505]=F[1]*v[162];
  v[502]=F[0]*v[162];
  v[499]=v[135]*v[162]+v[2252];
  v[2255]=v[2252]+v[499];
  v[475]=F[4]*v[162];
  v[473]=F[3]*v[162];
  v[470]=F[5]*v[162];
  v[448]=F[7]*v[162];
  v[446]=F[6]*v[162];
  v[443]=F[8]*v[162];
  v[421]=v[143]*v[351]+v[141]*v[381]+v[139]*v[401]+v[470];
  v[420]=v[143]*v[350]+v[141]*v[380]+v[139]*v[399]+v[475];
  v[414]=v[143]*v[344]+v[141]*v[374]+v[139]*v[385]+v[473];
  v[412]=v[146]*v[351]+v[145]*v[381]+v[144]*v[401]+v[443];
  v[411]=v[146]*v[350]+v[145]*v[380]+v[144]*v[399]+v[448];
  v[405]=v[146]*v[344]+v[145]*v[374]+v[144]*v[385]+v[446];
  v[179]=v[144]*v[162]+v[145]*v[169]+v[146]*v[170];
  v[175]=v[139]*v[162]+v[141]*v[169]+v[143]*v[170];
  v[164]=-2e0*v[148]*v[152]+v[159];
  v[495]=v[137]*v[162]+v[160]*v[164]+v[135]*v[172];
  v[440]=(-v[2245]+v[164]*v[322])/2e0;
  v[494]=F[5]*v[171]+v[141]*v[342]+v[143]*v[382]+v[139]*v[440];
  v[467]=F[8]*v[171]+v[145]*v[342]+v[146]*v[382]+v[144]*v[440];
  v[439]=(-v[2246]+v[164]*v[321])/2e0;
  v[478]=F[5]*v[172]+v[139]*v[331]+v[143]*v[401]+v[141]*v[439];
  v[451]=F[8]*v[172]+v[144]*v[331]+v[146]*v[401]+v[145]*v[439];
  v[438]=(-v[2247]+v[164]*v[320])/2e0;
  v[477]=F[4]*v[172]+v[139]*v[330]+v[143]*v[399]+v[141]*v[438];
  v[450]=F[7]*v[172]+v[144]*v[330]+v[146]*v[399]+v[145]*v[438];
  v[437]=(v[164]*v[319]+v[158]*v[428])/2e0;
  v[504]=2e0*(F[1]*v[2255]+v[2248]*v[329]+v[2249]*v[339]+v[2250]*v[349]+v[\
2253]*v[358]
   +v[2254]*v[368]+v[2251]*v[379]+v[135]*(v[164]*v[358]+2e0*v[137]*v[397]+v[\
160]*v[428]
   +v[136]*v[437]+v[505]));
  v[489]=v[141]*v[339]+v[143]*v[379]+v[139]*v[437]+v[488];
  v[476]=v[139]*v[329]+v[143]*v[397]+v[141]*v[437]+v[475];
  v[533]=2e0*(F[4]*v[175]+v[143]*v[419]+v[139]*v[476]+v[141]*v[489]);
  v[515]=2e0*(F[1]*v[175]+v[137]*v[419]+v[135]*v[476]+v[136]*v[489]);
  v[462]=v[145]*v[339]+v[146]*v[379]+v[144]*v[437]+v[461];
  v[449]=v[144]*v[329]+v[146]*v[397]+v[145]*v[437]+v[448];
  v[551]=2e0*(F[7]*v[179]+v[146]*v[410]+v[144]*v[449]+v[145]*v[462]);
  v[560]=(-v[504]-v[533]-v[551])/3e0;
  v[587]=v[551]+v[560];
  v[578]=v[533]+v[560];
  v[569]=v[504]+v[560];
  v[542]=2e0*(F[4]*v[179]+v[143]*v[410]+v[139]*v[449]+v[141]*v[462]);
  v[524]=2e0*(F[1]*v[179]+v[137]*v[410]+v[135]*v[449]+v[136]*v[462]);
  v[436]=(v[164]*v[318]+v[158]*v[427])/2e0;
  v[503]=2e0*(F[0]*v[2255]+v[2248]*v[328]+v[2249]*v[338]+v[2250]*v[348]+v[\
2253]*v[357]
   +v[2254]*v[367]+v[2251]*v[378]+v[135]*(v[164]*v[357]+2e0*v[137]*v[395]+v[\
160]*v[427]
   +v[136]*v[436]+v[502]));
  v[487]=v[141]*v[338]+v[143]*v[378]+v[139]*v[436]+v[486];
  v[474]=v[139]*v[328]+v[143]*v[395]+v[141]*v[436]+v[473];
  v[532]=2e0*(F[3]*v[175]+v[143]*v[418]+v[139]*v[474]+v[141]*v[487]);
  v[514]=2e0*(F[0]*v[175]+v[137]*v[418]+v[135]*v[474]+v[136]*v[487]);
  v[460]=v[145]*v[338]+v[146]*v[378]+v[144]*v[436]+v[459];
  v[447]=v[144]*v[328]+v[146]*v[395]+v[145]*v[436]+v[446];
  v[550]=2e0*(F[6]*v[179]+v[146]*v[409]+v[144]*v[447]+v[145]*v[460]);
  v[559]=(-v[503]-v[532]-v[550])/3e0;
  v[586]=v[550]+v[559];
  v[577]=v[532]+v[559];
  v[568]=v[503]+v[559];
  v[541]=2e0*(F[3]*v[179]+v[143]*v[409]+v[139]*v[447]+v[141]*v[460]);
  v[523]=2e0*(F[0]*v[179]+v[137]*v[409]+v[135]*v[447]+v[136]*v[460]);
  v[435]=(-v[2256]+v[164]*v[317])/2e0;
  v[485]=F[3]*v[171]+v[141]*v[337]+v[143]*v[377]+v[139]*v[435];
  v[458]=F[6]*v[171]+v[145]*v[337]+v[146]*v[377]+v[144]*v[435];
  v[434]=(v[164]*v[316]+v[158]*v[425])/2e0;
  v[500]=2e0*(F[2]*v[2255]+v[2248]*v[326]+v[2249]*v[336]+v[2250]*v[346]+v[\
2253]*v[355]
   +v[2254]*v[365]+v[2251]*v[376]+v[135]*(v[164]*v[355]+2e0*v[137]*v[390]+v[\
160]*v[425]
   +v[136]*v[434]+v[507]));
  v[484]=v[141]*v[336]+v[143]*v[376]+v[139]*v[434]+v[483];
  v[471]=v[139]*v[326]+v[143]*v[390]+v[141]*v[434]+v[470];
  v[530]=2e0*(F[5]*v[175]+v[143]*v[416]+v[139]*v[471]+v[141]*v[484]);
  v[512]=2e0*(F[2]*v[175]+v[137]*v[416]+v[135]*v[471]+v[136]*v[484]);
  v[457]=v[145]*v[336]+v[146]*v[376]+v[144]*v[434]+v[456];
  v[444]=v[144]*v[326]+v[146]*v[390]+v[145]*v[434]+v[443];
  v[548]=2e0*(F[8]*v[179]+v[146]*v[407]+v[144]*v[444]+v[145]*v[457]);
  v[557]=(-v[500]-v[530]-v[548])/3e0;
  v[584]=v[548]+v[557];
  v[575]=v[530]+v[557];
  v[566]=v[500]+v[557];
  v[539]=2e0*(F[5]*v[179]+v[143]*v[407]+v[139]*v[444]+v[141]*v[457]);
  v[521]=2e0*(F[2]*v[179]+v[137]*v[407]+v[135]*v[444]+v[136]*v[457]);
  v[433]=(-v[2257]+v[164]*v[315])/2e0;
  v[482]=F[4]*v[171]+v[141]*v[335]+v[143]*v[375]+v[139]*v[433];
  v[455]=F[7]*v[171]+v[145]*v[335]+v[146]*v[375]+v[144]*v[433];
  v[432]=(-v[2258]+v[164]*v[313])/2e0;
  v[468]=F[3]*v[172]+v[139]*v[324]+v[143]*v[385]+v[141]*v[432];
  v[441]=F[6]*v[172]+v[144]*v[324]+v[146]*v[385]+v[145]*v[432];
  v[168]=(v[158]*v[164])/2e0;
  v[508]=2e0*(v[135]*(F[2]*v[172]+v[135]*v[331]+v[164]*v[360]+v[137]*v[401]-v[\
160]*v[430])+v[136]*
   (F[2]*v[168]+v[136]*v[341]+v[137]*v[381]+v[135]*v[439])+F[2]*v[495]+v[137]*\
(v[137]*v[351]
   +v[161]*v[360]+v[160]*v[372]+v[135]*v[401]+v[507]));
  v[506]=2e0*(v[135]*(F[1]*v[172]+v[135]*v[330]+v[164]*v[359]+v[137]*v[399]-v[\
160]*v[429])+v[136]*
   (F[1]*v[168]+v[136]*v[340]+v[137]*v[380]+v[135]*v[438])+F[1]*v[495]+v[137]*\
(v[137]*v[350]
   +v[161]*v[359]+v[160]*v[370]+v[135]*v[399]+v[505]));
  v[497]=v[135]*v[168]+v[137]*v[169]+v[2259];
  v[2260]=v[2259]+v[497];
  v[509]=2e0*(F[2]*v[2260]+v[2248]*v[332]+v[2249]*v[342]+v[2250]*v[352]+v[\
2253]*v[361]
   +v[2254]*v[373]+v[2251]*v[382]+v[135]*(v[164]*v[361]+2e0*v[137]*v[404]-v[\
160]*v[431]
   +v[136]*v[440]));
  v[501]=2e0*(F[0]*v[2260]+v[2248]*v[327]+v[2249]*v[337]+v[2250]*v[347]+v[\
2253]*v[356]
   +v[2254]*v[366]+v[2251]*v[377]+v[135]*(v[164]*v[356]+2e0*v[137]*v[393]-v[\
160]*v[426]
   +v[136]*v[435]));
  v[498]=2e0*(F[1]*v[2260]+v[2248]*v[325]+v[2249]*v[335]+v[2250]*v[345]+v[\
2253]*v[354]
   +v[2254]*v[364]+v[2251]*v[375]+v[135]*(v[164]*v[354]+2e0*v[137]*v[388]-v[\
160]*v[424]
   +v[136]*v[433]));
  v[496]=2e0*(v[135]*(F[0]*v[172]+v[135]*v[324]+v[164]*v[353]+v[137]*v[385]-v[\
160]*v[423])+v[136]*
   (F[0]*v[168]+v[136]*v[334]+v[137]*v[374]+v[135]*v[432])+F[0]*v[495]+v[137]*\
(v[137]*v[344]
   +v[161]*v[353]+v[160]*v[363]+v[135]*v[385]+v[502]));
  v[492]=F[5]*v[168];
  v[493]=v[141]*v[341]+v[143]*v[381]+v[139]*v[439]+v[492];
  v[490]=F[4]*v[168];
  v[491]=v[141]*v[340]+v[143]*v[380]+v[139]*v[438]+v[490];
  v[480]=F[3]*v[168];
  v[481]=v[141]*v[334]+v[143]*v[374]+v[139]*v[432]+v[480];
  v[479]=v[139]*v[332]+v[143]*v[404]+v[141]*v[440]+v[492];
  v[472]=v[139]*v[327]+v[143]*v[393]+v[141]*v[435]+v[480];
  v[469]=v[139]*v[325]+v[143]*v[388]+v[141]*v[433]+v[490];
  v[465]=F[8]*v[168];
  v[466]=v[145]*v[341]+v[146]*v[381]+v[144]*v[439]+v[465];
  v[463]=F[7]*v[168];
  v[464]=v[145]*v[340]+v[146]*v[380]+v[144]*v[438]+v[463];
  v[453]=F[6]*v[168];
  v[454]=v[145]*v[334]+v[146]*v[374]+v[144]*v[432]+v[453];
  v[452]=v[144]*v[332]+v[146]*v[404]+v[145]*v[440]+v[465];
  v[445]=v[144]*v[327]+v[146]*v[393]+v[145]*v[435]+v[453];
  v[442]=v[144]*v[325]+v[146]*v[388]+v[145]*v[433]+v[463];
  v[181]=v[146]*v[162]+v[145]*v[168]+v[144]*v[172];
  v[553]=2e0*(F[8]*v[181]+v[146]*v[412]+v[144]*v[451]+v[145]*v[466]);
  v[552]=2e0*(F[7]*v[181]+v[146]*v[411]+v[144]*v[450]+v[145]*v[464]);
  v[546]=2e0*(F[6]*v[181]+v[146]*v[405]+v[144]*v[441]+v[145]*v[454]);
  v[544]=2e0*(F[5]*v[181]+v[143]*v[412]+v[139]*v[451]+v[141]*v[466]);
  v[543]=2e0*(F[4]*v[181]+v[143]*v[411]+v[139]*v[450]+v[141]*v[464]);
  v[537]=2e0*(F[3]*v[181]+v[143]*v[405]+v[139]*v[441]+v[141]*v[454]);
  v[526]=2e0*(F[2]*v[181]+v[137]*v[412]+v[135]*v[451]+v[136]*v[466]);
  v[525]=2e0*(F[1]*v[181]+v[137]*v[411]+v[135]*v[450]+v[136]*v[464]);
  v[519]=2e0*(F[0]*v[181]+v[137]*v[405]+v[135]*v[441]+v[136]*v[454]);
  v[180]=v[144]*v[168]+v[146]*v[169]+v[145]*v[171];
  v[554]=2e0*(F[8]*v[180]+v[146]*v[413]+v[144]*v[452]+v[145]*v[467]);
  v[549]=2e0*(F[6]*v[180]+v[146]*v[408]+v[144]*v[445]+v[145]*v[458]);
  v[547]=2e0*(F[7]*v[180]+v[146]*v[406]+v[144]*v[442]+v[145]*v[455]);
  v[545]=2e0*(F[5]*v[180]+v[143]*v[413]+v[139]*v[452]+v[141]*v[467]);
  v[540]=2e0*(F[3]*v[180]+v[143]*v[408]+v[139]*v[445]+v[141]*v[458]);
  v[538]=2e0*(F[4]*v[180]+v[143]*v[406]+v[139]*v[442]+v[141]*v[455]);
  v[527]=2e0*(F[2]*v[180]+v[137]*v[413]+v[135]*v[452]+v[136]*v[467]);
  v[522]=2e0*(F[0]*v[180]+v[137]*v[408]+v[135]*v[445]+v[136]*v[458]);
  v[520]=2e0*(F[1]*v[180]+v[137]*v[406]+v[135]*v[442]+v[136]*v[455]);
  v[177]=v[143]*v[162]+v[141]*v[168]+v[139]*v[172];
  v[535]=2e0*(F[5]*v[177]+v[143]*v[421]+v[139]*v[478]+v[141]*v[493]);
  v[562]=(-v[508]-v[535]-v[553])/3e0;
  v[589]=v[553]+v[562];
  v[580]=v[535]+v[562];
  v[571]=v[508]+v[562];
  v[534]=2e0*(F[4]*v[177]+v[143]*v[420]+v[139]*v[477]+v[141]*v[491]);
  v[561]=(-v[506]-v[534]-v[552])/3e0;
  v[588]=v[552]+v[561];
  v[579]=v[534]+v[561];
  v[570]=v[506]+v[561];
  v[528]=2e0*(F[3]*v[177]+v[143]*v[414]+v[139]*v[468]+v[141]*v[481]);
  v[555]=(-v[496]-v[528]-v[546])/3e0;
  v[582]=v[546]+v[555];
  v[573]=v[528]+v[555];
  v[564]=v[496]+v[555];
  v[517]=2e0*(F[2]*v[177]+v[137]*v[421]+v[135]*v[478]+v[136]*v[493]);
  v[516]=2e0*(F[1]*v[177]+v[137]*v[420]+v[135]*v[477]+v[136]*v[491]);
  v[510]=2e0*(F[0]*v[177]+v[137]*v[414]+v[135]*v[468]+v[136]*v[481]);
  v[176]=v[139]*v[168]+v[143]*v[169]+v[141]*v[171];
  v[536]=2e0*(F[5]*v[176]+v[143]*v[422]+v[139]*v[479]+v[141]*v[494]);
  v[563]=(-v[509]-v[536]-v[554])/3e0;
  v[590]=v[554]+v[563];
  v[581]=v[536]+v[563];
  v[572]=v[509]+v[563];
  v[531]=2e0*(F[3]*v[176]+v[143]*v[417]+v[139]*v[472]+v[141]*v[485]);
  v[558]=(-v[501]-v[531]-v[549])/3e0;
  v[585]=v[549]+v[558];
  v[576]=v[531]+v[558];
  v[567]=v[501]+v[558];
  v[529]=2e0*(F[4]*v[176]+v[143]*v[415]+v[139]*v[469]+v[141]*v[482]);
  v[556]=(-v[498]-v[529]-v[547])/3e0;
  v[583]=v[547]+v[556];
  v[574]=v[529]+v[556];
  v[565]=v[498]+v[556];
  v[518]=2e0*(F[2]*v[176]+v[137]*v[422]+v[135]*v[479]+v[136]*v[494]);
  v[513]=2e0*(F[0]*v[176]+v[137]*v[417]+v[135]*v[472]+v[136]*v[485]);
  v[511]=2e0*(F[1]*v[176]+v[137]*v[415]+v[135]*v[469]+v[136]*v[482]);
  v[167]=2e0*(v[135]*v[495]+v[136]*v[497]+v[137]*v[499]);
  v[173]=2e0*(v[137]*v[175]+v[136]*v[176]+v[135]*v[177]);
  v[174]=2e0*(v[137]*v[179]+v[136]*v[180]+v[135]*v[181]);
  v[178]=2e0*(v[143]*v[175]+v[141]*v[176]+v[139]*v[177]);
  v[182]=2e0*(v[143]*v[179]+v[141]*v[180]+v[139]*v[181]);
  v[183]=2e0*(v[146]*v[179]+v[145]*v[180]+v[144]*v[181]);
  v[185]=(-v[167]-v[178]-v[183])/3e0;
  v[184]=v[167]+v[185];
  v[186]=v[178]+v[185];
  v[187]=v[183]+v[185];
  v[2261]=sqrt(0.15e1*(2e0*(v[173]*v[173])+2e0*(v[174]*v[174])+2e0*(v[182]*v[\
182])+(v[184]*v[184])+
   (v[186]*v[186])+(v[187]*v[187])));
  v[2267]=0.15e1/v[2261];
  v[2266]=0.15e1/v[2261];
  v[2265]=0.15e1/v[2261];
  v[2264]=0.15e1/v[2261];
  v[2263]=0.15e1/v[2261];
  v[2262]=0.15e1/v[2261];
  v[600]=(0.15e1*(2e0*v[173]*v[518]+2e0*v[174]*v[527]+2e0*v[182]*v[545]+v[184]\
*v[572]+v[186]*v[581]
   +v[187]*v[590]))/v[2261];
  v[599]=(0.15e1*(2e0*v[173]*v[517]+2e0*v[174]*v[526]+2e0*v[182]*v[544]+v[184]\
*v[571]+v[186]*v[580]
   +v[187]*v[589]))/v[2261];
  v[598]=(0.15e1*(2e0*v[173]*v[516]+2e0*v[174]*v[525]+2e0*v[182]*v[543]+v[184]\
*v[570]+v[186]*v[579]
   +v[187]*v[588]))/v[2261];
  v[597]=v[2267]*(2e0*v[173]*v[515]+2e0*v[174]*v[524]+2e0*v[182]*v[542]+v[184]\
*v[569]+v[186]*v[578]
   +v[187]*v[587]);
  v[596]=v[2266]*(2e0*v[173]*v[514]+2e0*v[174]*v[523]+2e0*v[182]*v[541]+v[184]\
*v[568]+v[186]*v[577]
   +v[187]*v[586]);
  v[595]=v[2265]*(2e0*v[173]*v[513]+2e0*v[174]*v[522]+2e0*v[182]*v[540]+v[184]\
*v[567]+v[186]*v[576]
   +v[187]*v[585]);
  v[594]=v[2264]*(2e0*v[173]*v[512]+2e0*v[174]*v[521]+2e0*v[182]*v[539]+v[184]\
*v[566]+v[186]*v[575]
   +v[187]*v[584]);
  v[593]=v[2263]*(2e0*v[173]*v[511]+2e0*v[174]*v[520]+2e0*v[182]*v[538]+v[184]\
*v[565]+v[186]*v[574]
   +v[187]*v[583]);
  v[592]=v[2262]*(2e0*v[173]*v[510]+2e0*v[174]*v[519]+2e0*v[182]*v[537]+v[184]\
*v[564]+v[186]*v[573]
   +v[187]*v[582]);
  v[602]=1e0/Power(v[2261],2);
  v[610]=-(v[600]*v[602]);
  v[609]=-(v[599]*v[602]);
  v[608]=-(v[598]*v[602]);
  v[607]=-(v[597]*v[602]);
  v[606]=-(v[596]*v[602]);
  v[605]=-(v[595]*v[602]);
  v[604]=-(v[594]*v[602]);
  v[603]=-(v[593]*v[602]);
  v[601]=-(v[592]*v[602]);
  v[726]=-0.1224744871391589e1*v[184]*v[2262];
  v[716]=-0.1224744871391589e1*v[173]*v[2263];
  v[706]=-0.1224744871391589e1*v[174]*v[2264];
  v[696]=-0.1224744871391589e1*v[186]*v[2265];
  v[686]=-0.1224744871391589e1*v[182]*v[2266];
  v[676]=-0.1224744871391589e1*v[187]*v[2267];
  v[199]=h[9]-v[132];
  v[2268]=0.18371173070873836e1*v[199];
  v[725]=v[2268]*(v[572]/v[2261]+v[184]*v[610]);
  v[724]=v[2268]*(v[571]/v[2261]+v[184]*v[609]);
  v[723]=1e0*v[2268]*(v[570]/v[2261]+v[184]*v[608]);
  v[722]=1e0*v[2268]*(v[569]/v[2261]+v[184]*v[607]);
  v[721]=1e0*v[2268]*(v[568]/v[2261]+v[184]*v[606]);
  v[720]=1e0*v[2268]*(v[567]/v[2261]+v[184]*v[605]);
  v[719]=1e0*v[2268]*(v[566]/v[2261]+v[184]*v[604]);
  v[718]=1e0*v[2268]*(v[565]/v[2261]+v[184]*v[603]);
  v[717]=1e0*v[2268]*(v[564]/v[2261]+v[184]*v[601]);
  v[715]=1e0*v[2268]*(v[518]/v[2261]+v[173]*v[610]);
  v[714]=1e0*v[2268]*(v[517]/v[2261]+v[173]*v[609]);
  v[713]=1e0*v[2268]*(v[516]/v[2261]+v[173]*v[608]);
  v[712]=1e0*v[2268]*(v[515]/v[2261]+v[173]*v[607]);
  v[711]=1e0*v[2268]*(v[514]/v[2261]+v[173]*v[606]);
  v[710]=1e0*v[2268]*(v[513]/v[2261]+v[173]*v[605]);
  v[709]=1e0*v[2268]*(v[512]/v[2261]+v[173]*v[604]);
  v[708]=1e0*v[2268]*(v[511]/v[2261]+v[173]*v[603]);
  v[707]=1e0*v[2268]*(v[510]/v[2261]+v[173]*v[601]);
  v[705]=1e0*v[2268]*(v[527]/v[2261]+v[174]*v[610]);
  v[704]=1e0*v[2268]*(v[526]/v[2261]+v[174]*v[609]);
  v[703]=1e0*v[2268]*(v[525]/v[2261]+v[174]*v[608]);
  v[702]=1e0*v[2268]*(v[524]/v[2261]+v[174]*v[607]);
  v[701]=1e0*v[2268]*(v[523]/v[2261]+v[174]*v[606]);
  v[700]=1e0*v[2268]*(v[522]/v[2261]+v[174]*v[605]);
  v[699]=1e0*v[2268]*(v[521]/v[2261]+v[174]*v[604]);
  v[698]=1e0*v[2268]*(v[520]/v[2261]+v[174]*v[603]);
  v[697]=1e0*v[2268]*(v[519]/v[2261]+v[174]*v[601]);
  v[695]=1e0*v[2268]*(v[581]/v[2261]+v[186]*v[610]);
  v[694]=1e0*v[2268]*(v[580]/v[2261]+v[186]*v[609]);
  v[693]=1e0*v[2268]*(v[579]/v[2261]+v[186]*v[608]);
  v[692]=1e0*v[2268]*(v[578]/v[2261]+v[186]*v[607]);
  v[691]=1e0*v[2268]*(v[577]/v[2261]+v[186]*v[606]);
  v[690]=1e0*v[2268]*(v[576]/v[2261]+v[186]*v[605]);
  v[689]=1e0*v[2268]*(v[575]/v[2261]+v[186]*v[604]);
  v[688]=1e0*v[2268]*(v[574]/v[2261]+v[186]*v[603]);
  v[687]=1e0*v[2268]*(v[573]/v[2261]+v[186]*v[601]);
  v[685]=1e0*v[2268]*(v[545]/v[2261]+v[182]*v[610]);
  v[684]=1e0*v[2268]*(v[544]/v[2261]+v[182]*v[609]);
  v[683]=1e0*v[2268]*(v[543]/v[2261]+v[182]*v[608]);
  v[682]=1e0*v[2268]*(v[542]/v[2261]+v[182]*v[607]);
  v[681]=1e0*v[2268]*(v[541]/v[2261]+v[182]*v[606]);
  v[680]=1e0*v[2268]*(v[540]/v[2261]+v[182]*v[605]);
  v[679]=1e0*v[2268]*(v[539]/v[2261]+v[182]*v[604]);
  v[678]=1e0*v[2268]*(v[538]/v[2261]+v[182]*v[603]);
  v[677]=1e0*v[2268]*(v[537]/v[2261]+v[182]*v[601]);
  v[675]=1e0*v[2268]*(v[590]/v[2261]+v[187]*v[610]);
  v[674]=1e0*v[2268]*(v[589]/v[2261]+v[187]*v[609]);
  v[673]=1e0*v[2268]*(v[588]/v[2261]+v[187]*v[608]);
  v[672]=1e0*v[2268]*(v[587]/v[2261]+v[187]*v[607]);
  v[671]=1e0*v[2268]*(v[586]/v[2261]+v[187]*v[606]);
  v[670]=1e0*v[2268]*(v[585]/v[2261]+v[187]*v[605]);
  v[669]=1e0*v[2268]*(v[584]/v[2261]+v[187]*v[604]);
  v[668]=1e0*v[2268]*(v[583]/v[2261]+v[187]*v[603]);
  v[667]=1e0*v[2268]*(v[582]/v[2261]+v[187]*v[601]);
  MatrixXC1[0]=-(v[199]*v[726]);
  MatrixXC1[1]=-(v[199]*v[716]);
  MatrixXC1[2]=-(v[199]*v[706]);
  MatrixXC1[3]=-(v[199]*v[696]);
  MatrixXC1[4]=-(v[199]*v[686]);
  MatrixXC1[5]=-(v[199]*v[676]);
  MatrixExponentialOMDMFS(MatrixXC1,&repC1,MatrixEXC1,MatrixDEXC1);
  v[217]=MatrixDEXC1[0];
  v[218]=MatrixDEXC1[1];
  v[219]=MatrixDEXC1[2];
  v[220]=MatrixDEXC1[3];
  v[221]=MatrixDEXC1[4];
  v[222]=MatrixDEXC1[5];
  v[736]=v[222]*v[676]+2e0*v[221]*v[686]+v[220]*v[696]+2e0*v[219]*v[706]+2e0*\
v[218]*v[716]
   +v[217]*v[726];
  v[735]=v[222]*v[675]+2e0*v[221]*v[685]+v[220]*v[695]+2e0*v[219]*v[705]+2e0*\
v[218]*v[715]
   +v[217]*v[725];
  v[734]=v[222]*v[674]+2e0*v[221]*v[684]+v[220]*v[694]+2e0*v[219]*v[704]+2e0*\
v[218]*v[714]
   +v[217]*v[724];
  v[733]=v[222]*v[673]+2e0*v[221]*v[683]+v[220]*v[693]+2e0*v[219]*v[703]+2e0*\
v[218]*v[713]
   +v[217]*v[723];
  v[732]=v[222]*v[672]+2e0*v[221]*v[682]+v[220]*v[692]+2e0*v[219]*v[702]+2e0*\
v[218]*v[712]
   +v[217]*v[722];
  v[731]=v[222]*v[671]+2e0*v[221]*v[681]+v[220]*v[691]+2e0*v[219]*v[701]+2e0*\
v[218]*v[711]
   +v[217]*v[721];
  v[730]=v[222]*v[670]+2e0*v[221]*v[680]+v[220]*v[690]+2e0*v[219]*v[700]+2e0*\
v[218]*v[710]
   +v[217]*v[720];
  v[729]=v[222]*v[669]+2e0*v[221]*v[679]+v[220]*v[689]+2e0*v[219]*v[699]+2e0*\
v[218]*v[709]
   +v[217]*v[719];
  v[728]=v[222]*v[668]+2e0*v[221]*v[678]+v[220]*v[688]+2e0*v[219]*v[698]+2e0*\
v[218]*v[708]
   +v[217]*v[718];
  v[727]=v[222]*v[667]+2e0*v[221]*v[677]+v[220]*v[687]+2e0*v[219]*v[697]+2e0*\
v[218]*v[707]
   +v[217]*v[717];
  v[2271]=MatrixDEXC1[6]+v[220];
  v[2270]=MatrixDEXC1[7]+v[221];
  v[225]=MatrixDEXC1[8];
  v[226]=MatrixDEXC1[9];
  v[2269]=MatrixDEXC1[10]+v[226];
  v[228]=MatrixDEXC1[11];
  v[746]=v[228]*v[676]+v[2269]*v[686]+v[225]*v[696]+v[2270]*v[706]+v[2271]*v[\
716]+v[218]*v[726];
  v[745]=v[228]*v[675]+v[2269]*v[685]+v[225]*v[695]+v[2270]*v[705]+v[2271]*v[\
715]+v[218]*v[725];
  v[744]=v[228]*v[674]+v[2269]*v[684]+v[225]*v[694]+v[2270]*v[704]+v[2271]*v[\
714]+v[218]*v[724];
  v[743]=v[228]*v[673]+v[2269]*v[683]+v[225]*v[693]+v[2270]*v[703]+v[2271]*v[\
713]+v[218]*v[723];
  v[742]=v[228]*v[672]+v[2269]*v[682]+v[225]*v[692]+v[2270]*v[702]+v[2271]*v[\
712]+v[218]*v[722];
  v[741]=v[228]*v[671]+v[2269]*v[681]+v[225]*v[691]+v[2270]*v[701]+v[2271]*v[\
711]+v[218]*v[721];
  v[740]=v[228]*v[670]+v[2269]*v[680]+v[225]*v[690]+v[2270]*v[700]+v[2271]*v[\
710]+v[218]*v[720];
  v[739]=v[228]*v[669]+v[2269]*v[679]+v[225]*v[689]+v[2270]*v[699]+v[2271]*v[\
709]+v[218]*v[719];
  v[738]=v[228]*v[668]+v[2269]*v[678]+v[225]*v[688]+v[2270]*v[698]+v[2271]*v[\
708]+v[218]*v[718];
  v[737]=v[228]*v[667]+v[2269]*v[677]+v[225]*v[687]+v[2270]*v[697]+v[2271]*v[\
707]+v[218]*v[717];
  v[2273]=MatrixDEXC1[12]+v[222];
  v[2272]=MatrixDEXC1[13]+v[228];
  v[231]=MatrixDEXC1[14];
  v[756]=v[231]*v[676]+v[2272]*v[686]+v[226]*v[696]+v[2273]*v[706]+v[2270]*v[\
716]+v[219]*v[726];
  v[786]=F[0]*v[736]+F[3]*v[746]+F[6]*v[756];
  v[776]=F[1]*v[736]+F[4]*v[746]+F[7]*v[756];
  v[766]=F[2]*v[736]+F[5]*v[746]+F[8]*v[756];
  v[886]=-(h[7]*v[766])-h[6]*v[776]-v[50]*v[786];
  v[755]=v[231]*v[675]+v[2272]*v[685]+v[226]*v[695]+v[2273]*v[705]+v[2270]*v[\
715]+v[219]*v[725];
  v[785]=F[0]*v[735]+F[3]*v[745]+F[6]*v[755];
  v[775]=F[1]*v[735]+F[4]*v[745]+F[7]*v[755];
  v[765]=F[2]*v[735]+F[5]*v[745]+F[8]*v[755];
  v[885]=-(h[7]*v[765])-h[6]*v[775]-v[50]*v[785];
  v[754]=v[231]*v[674]+v[2272]*v[684]+v[226]*v[694]+v[2273]*v[704]+v[2270]*v[\
714]+v[219]*v[724];
  v[784]=F[0]*v[734]+F[3]*v[744]+F[6]*v[754];
  v[774]=F[1]*v[734]+F[4]*v[744]+F[7]*v[754];
  v[764]=F[2]*v[734]+F[5]*v[744]+F[8]*v[754];
  v[884]=F[2]-h[7]*v[764]-h[6]*v[774]-v[50]*v[784];
  v[753]=v[231]*v[673]+v[2272]*v[683]+v[226]*v[693]+v[2273]*v[703]+v[2270]*v[\
713]+v[219]*v[723];
  v[783]=F[0]*v[733]+F[3]*v[743]+F[6]*v[753];
  v[773]=F[1]*v[733]+F[4]*v[743]+F[7]*v[753];
  v[763]=F[2]*v[733]+F[5]*v[743]+F[8]*v[753];
  v[883]=F[1]-h[7]*v[763]-h[6]*v[773]-v[50]*v[783];
  v[752]=v[231]*v[672]+v[2272]*v[682]+v[226]*v[692]+v[2273]*v[702]+v[2270]*v[\
712]+v[219]*v[722];
  v[782]=F[0]*v[732]+F[3]*v[742]+F[6]*v[752];
  v[772]=F[1]*v[732]+F[4]*v[742]+F[7]*v[752];
  v[762]=F[2]*v[732]+F[5]*v[742]+F[8]*v[752];
  v[882]=-(h[7]*v[762])-h[6]*v[772]-v[50]*v[782];
  v[751]=v[231]*v[671]+v[2272]*v[681]+v[226]*v[691]+v[2273]*v[701]+v[2270]*v[\
711]+v[219]*v[721];
  v[781]=F[0]*v[731]+F[3]*v[741]+F[6]*v[751];
  v[771]=F[1]*v[731]+F[4]*v[741]+F[7]*v[751];
  v[761]=F[2]*v[731]+F[5]*v[741]+F[8]*v[751];
  v[881]=-(h[7]*v[761])-h[6]*v[771]-v[50]*v[781];
  v[750]=v[231]*v[670]+v[2272]*v[680]+v[226]*v[690]+v[2273]*v[700]+v[2270]*v[\
710]+v[219]*v[720];
  v[780]=F[0]*v[730]+F[3]*v[740]+F[6]*v[750];
  v[770]=F[1]*v[730]+F[4]*v[740]+F[7]*v[750];
  v[760]=F[2]*v[730]+F[5]*v[740]+F[8]*v[750];
  v[880]=-(h[7]*v[760])-h[6]*v[770]-v[50]*v[780];
  v[749]=v[231]*v[669]+v[2272]*v[679]+v[226]*v[689]+v[2273]*v[699]+v[2270]*v[\
709]+v[219]*v[719];
  v[779]=F[0]*v[729]+F[3]*v[739]+F[6]*v[749];
  v[769]=F[1]*v[729]+F[4]*v[739]+F[7]*v[749];
  v[759]=F[2]*v[729]+F[5]*v[739]+F[8]*v[749];
  v[879]=-(h[7]*v[759])-h[6]*v[769]-v[50]*v[779];
  v[748]=v[231]*v[668]+v[2272]*v[678]+v[226]*v[688]+v[2273]*v[698]+v[2270]*v[\
708]+v[219]*v[718];
  v[778]=F[0]*v[728]+F[3]*v[738]+F[6]*v[748];
  v[768]=F[1]*v[728]+F[4]*v[738]+F[7]*v[748];
  v[758]=F[2]*v[728]+F[5]*v[738]+F[8]*v[748];
  v[878]=-(h[7]*v[758])-h[6]*v[768]-v[50]*v[778];
  v[747]=v[231]*v[667]+v[2272]*v[677]+v[226]*v[687]+v[2273]*v[697]+v[2270]*v[\
707]+v[219]*v[717];
  v[777]=F[0]*v[727]+F[3]*v[737]+F[6]*v[747];
  v[767]=F[1]*v[727]+F[4]*v[737]+F[7]*v[747];
  v[757]=F[2]*v[727]+F[5]*v[737]+F[8]*v[747];
  v[877]=F[0]-h[7]*v[757]-h[6]*v[767]-v[50]*v[777];
  v[232]=MatrixDEXC1[15];
  v[233]=MatrixDEXC1[16];
  v[234]=MatrixDEXC1[17];
  v[796]=v[234]*v[676]+2e0*v[233]*v[686]+v[232]*v[696]+2e0*v[226]*v[706]+2e0*\
v[225]*v[716]
   +v[220]*v[726];
  v[795]=v[234]*v[675]+2e0*v[233]*v[685]+v[232]*v[695]+2e0*v[226]*v[705]+2e0*\
v[225]*v[715]
   +v[220]*v[725];
  v[794]=v[234]*v[674]+2e0*v[233]*v[684]+v[232]*v[694]+2e0*v[226]*v[704]+2e0*\
v[225]*v[714]
   +v[220]*v[724];
  v[793]=v[234]*v[673]+2e0*v[233]*v[683]+v[232]*v[693]+2e0*v[226]*v[703]+2e0*\
v[225]*v[713]
   +v[220]*v[723];
  v[792]=v[234]*v[672]+2e0*v[233]*v[682]+v[232]*v[692]+2e0*v[226]*v[702]+2e0*\
v[225]*v[712]
   +v[220]*v[722];
  v[791]=v[234]*v[671]+2e0*v[233]*v[681]+v[232]*v[691]+2e0*v[226]*v[701]+2e0*\
v[225]*v[711]
   +v[220]*v[721];
  v[790]=v[234]*v[670]+2e0*v[233]*v[680]+v[232]*v[690]+2e0*v[226]*v[700]+2e0*\
v[225]*v[710]
   +v[220]*v[720];
  v[789]=v[234]*v[669]+2e0*v[233]*v[679]+v[232]*v[689]+2e0*v[226]*v[699]+2e0*\
v[225]*v[709]
   +v[220]*v[719];
  v[788]=v[234]*v[668]+2e0*v[233]*v[678]+v[232]*v[688]+2e0*v[226]*v[698]+2e0*\
v[225]*v[708]
   +v[220]*v[718];
  v[787]=v[234]*v[667]+2e0*v[233]*v[677]+v[232]*v[687]+2e0*v[226]*v[697]+2e0*\
v[225]*v[707]
   +v[220]*v[717];
  v[2274]=MatrixDEXC1[18]+v[234];
  v[236]=MatrixDEXC1[19];
  v[806]=v[236]*v[676]+v[2274]*v[686]+v[233]*v[696]+v[2272]*v[706]+v[2269]*v[\
716]+v[221]*v[726];
  v[836]=F[0]*v[746]+F[3]*v[796]+F[6]*v[806];
  v[826]=F[1]*v[746]+F[4]*v[796]+F[7]*v[806];
  v[816]=F[2]*v[746]+F[5]*v[796]+F[8]*v[806];
  v[805]=v[236]*v[675]+v[2274]*v[685]+v[233]*v[695]+v[2272]*v[705]+v[2269]*v[\
715]+v[221]*v[725];
  v[835]=F[0]*v[745]+F[3]*v[795]+F[6]*v[805];
  v[825]=F[1]*v[745]+F[4]*v[795]+F[7]*v[805];
  v[815]=F[2]*v[745]+F[5]*v[795]+F[8]*v[805];
  v[804]=v[236]*v[674]+v[2274]*v[684]+v[233]*v[694]+v[2272]*v[704]+v[2269]*v[\
714]+v[221]*v[724];
  v[834]=F[0]*v[744]+F[3]*v[794]+F[6]*v[804];
  v[824]=F[1]*v[744]+F[4]*v[794]+F[7]*v[804];
  v[814]=F[2]*v[744]+F[5]*v[794]+F[8]*v[804];
  v[803]=v[236]*v[673]+v[2274]*v[683]+v[233]*v[693]+v[2272]*v[703]+v[2269]*v[\
713]+v[221]*v[723];
  v[833]=F[0]*v[743]+F[3]*v[793]+F[6]*v[803];
  v[823]=F[1]*v[743]+F[4]*v[793]+F[7]*v[803];
  v[813]=F[2]*v[743]+F[5]*v[793]+F[8]*v[803];
  v[802]=v[236]*v[672]+v[2274]*v[682]+v[233]*v[692]+v[2272]*v[702]+v[2269]*v[\
712]+v[221]*v[722];
  v[832]=F[0]*v[742]+F[3]*v[792]+F[6]*v[802];
  v[822]=F[1]*v[742]+F[4]*v[792]+F[7]*v[802];
  v[812]=F[2]*v[742]+F[5]*v[792]+F[8]*v[802];
  v[801]=v[236]*v[671]+v[2274]*v[681]+v[233]*v[691]+v[2272]*v[701]+v[2269]*v[\
711]+v[221]*v[721];
  v[831]=F[0]*v[741]+F[3]*v[791]+F[6]*v[801];
  v[821]=F[1]*v[741]+F[4]*v[791]+F[7]*v[801];
  v[811]=F[2]*v[741]+F[5]*v[791]+F[8]*v[801];
  v[800]=v[236]*v[670]+v[2274]*v[680]+v[233]*v[690]+v[2272]*v[700]+v[2269]*v[\
710]+v[221]*v[720];
  v[830]=F[0]*v[740]+F[3]*v[790]+F[6]*v[800];
  v[820]=F[1]*v[740]+F[4]*v[790]+F[7]*v[800];
  v[810]=F[2]*v[740]+F[5]*v[790]+F[8]*v[800];
  v[799]=v[236]*v[669]+v[2274]*v[679]+v[233]*v[689]+v[2272]*v[699]+v[2269]*v[\
709]+v[221]*v[719];
  v[829]=F[0]*v[739]+F[3]*v[789]+F[6]*v[799];
  v[819]=F[1]*v[739]+F[4]*v[789]+F[7]*v[799];
  v[809]=F[2]*v[739]+F[5]*v[789]+F[8]*v[799];
  v[798]=v[236]*v[668]+v[2274]*v[678]+v[233]*v[688]+v[2272]*v[698]+v[2269]*v[\
708]+v[221]*v[718];
  v[828]=F[0]*v[738]+F[3]*v[788]+F[6]*v[798];
  v[818]=F[1]*v[738]+F[4]*v[788]+F[7]*v[798];
  v[808]=F[2]*v[738]+F[5]*v[788]+F[8]*v[798];
  v[797]=v[236]*v[667]+v[2274]*v[677]+v[233]*v[687]+v[2272]*v[697]+v[2269]*v[\
707]+v[221]*v[717];
  v[827]=F[0]*v[737]+F[3]*v[787]+F[6]*v[797];
  v[817]=F[1]*v[737]+F[4]*v[787]+F[7]*v[797];
  v[807]=F[2]*v[737]+F[5]*v[787]+F[8]*v[797];
  v[237]=MatrixDEXC1[20];
  v[846]=v[237]*v[676]+2e0*v[236]*v[686]+v[234]*v[696]+2e0*v[231]*v[706]+2e0*\
v[228]*v[716]
   +v[222]*v[726];
  v[876]=F[0]*v[756]+F[3]*v[806]+F[6]*v[846];
  v[866]=F[1]*v[756]+F[4]*v[806]+F[7]*v[846];
  v[856]=F[2]*v[756]+F[5]*v[806]+F[8]*v[846];
  v[845]=v[237]*v[675]+2e0*v[236]*v[685]+v[234]*v[695]+2e0*v[231]*v[705]+2e0*\
v[228]*v[715]
   +v[222]*v[725];
  v[875]=F[0]*v[755]+F[3]*v[805]+F[6]*v[845];
  v[865]=F[1]*v[755]+F[4]*v[805]+F[7]*v[845];
  v[855]=F[2]*v[755]+F[5]*v[805]+F[8]*v[845];
  v[844]=v[237]*v[674]+2e0*v[236]*v[684]+v[234]*v[694]+2e0*v[231]*v[704]+2e0*\
v[228]*v[714]
   +v[222]*v[724];
  v[874]=F[0]*v[754]+F[3]*v[804]+F[6]*v[844];
  v[864]=F[1]*v[754]+F[4]*v[804]+F[7]*v[844];
  v[854]=F[2]*v[754]+F[5]*v[804]+F[8]*v[844];
  v[843]=v[237]*v[673]+2e0*v[236]*v[683]+v[234]*v[693]+2e0*v[231]*v[703]+2e0*\
v[228]*v[713]
   +v[222]*v[723];
  v[873]=F[0]*v[753]+F[3]*v[803]+F[6]*v[843];
  v[863]=F[1]*v[753]+F[4]*v[803]+F[7]*v[843];
  v[853]=F[2]*v[753]+F[5]*v[803]+F[8]*v[843];
  v[842]=v[237]*v[672]+2e0*v[236]*v[682]+v[234]*v[692]+2e0*v[231]*v[702]+2e0*\
v[228]*v[712]
   +v[222]*v[722];
  v[872]=F[0]*v[752]+F[3]*v[802]+F[6]*v[842];
  v[862]=F[1]*v[752]+F[4]*v[802]+F[7]*v[842];
  v[852]=F[2]*v[752]+F[5]*v[802]+F[8]*v[842];
  v[841]=v[237]*v[671]+2e0*v[236]*v[681]+v[234]*v[691]+2e0*v[231]*v[701]+2e0*\
v[228]*v[711]
   +v[222]*v[721];
  v[871]=F[0]*v[751]+F[3]*v[801]+F[6]*v[841];
  v[861]=F[1]*v[751]+F[4]*v[801]+F[7]*v[841];
  v[851]=F[2]*v[751]+F[5]*v[801]+F[8]*v[841];
  v[840]=v[237]*v[670]+2e0*v[236]*v[680]+v[234]*v[690]+2e0*v[231]*v[700]+2e0*\
v[228]*v[710]
   +v[222]*v[720];
  v[870]=F[0]*v[750]+F[3]*v[800]+F[6]*v[840];
  v[860]=F[1]*v[750]+F[4]*v[800]+F[7]*v[840];
  v[850]=F[2]*v[750]+F[5]*v[800]+F[8]*v[840];
  v[839]=v[237]*v[669]+2e0*v[236]*v[679]+v[234]*v[689]+2e0*v[231]*v[699]+2e0*\
v[228]*v[709]
   +v[222]*v[719];
  v[869]=F[0]*v[749]+F[3]*v[799]+F[6]*v[839];
  v[859]=F[1]*v[749]+F[4]*v[799]+F[7]*v[839];
  v[849]=F[2]*v[749]+F[5]*v[799]+F[8]*v[839];
  v[838]=v[237]*v[668]+2e0*v[236]*v[678]+v[234]*v[688]+2e0*v[231]*v[698]+2e0*\
v[228]*v[708]
   +v[222]*v[718];
  v[868]=F[0]*v[748]+F[3]*v[798]+F[6]*v[838];
  v[858]=F[1]*v[748]+F[4]*v[798]+F[7]*v[838];
  v[848]=F[2]*v[748]+F[5]*v[798]+F[8]*v[838];
  v[837]=v[237]*v[667]+2e0*v[236]*v[677]+v[234]*v[687]+2e0*v[231]*v[697]+2e0*\
v[228]*v[707]
   +v[222]*v[717];
  v[867]=F[0]*v[747]+F[3]*v[797]+F[6]*v[837];
  v[857]=F[1]*v[747]+F[4]*v[797]+F[7]*v[837];
  v[847]=F[2]*v[747]+F[5]*v[797]+F[8]*v[837];
  v[238]=MatrixEXC1[0];
  v[239]=MatrixEXC1[1];
  v[240]=MatrixEXC1[2];
  v[252]=F[2]*v[238]+F[5]*v[239]+F[8]*v[240];
  v[251]=F[1]*v[238]+F[4]*v[239]+F[7]*v[240];
  v[250]=F[0]*v[238]+F[3]*v[239]+F[6]*v[240];
  v[242]=MatrixEXC1[3];
  v[243]=MatrixEXC1[4];
  v[257]=F[2]*v[239]+F[5]*v[242]+F[8]*v[243];
  v[256]=F[1]*v[239]+F[4]*v[242]+F[7]*v[243];
  v[255]=F[0]*v[239]+F[3]*v[242]+F[6]*v[243];
  v[246]=MatrixEXC1[5];
  v[262]=F[2]*v[240]+F[5]*v[243]+F[8]*v[246];
  v[261]=F[1]*v[240]+F[4]*v[243]+F[7]*v[246];
  v[260]=F[0]*v[240]+F[3]*v[243]+F[6]*v[246];
  v[247]=v[135]-h[6]*v[251]-h[7]*v[252]-v[250]*v[50];
  v[967]=-((h[8]*v[807]+v[52]*v[817]+h[3]*v[827])/v[877]);
  v[968]=F[4]-h[8]*v[808]-v[52]*v[818]-h[3]*v[828]-v[878]*v[967];
  v[969]=-(h[8]*v[809])-v[52]*v[819]-h[3]*v[829]-v[879]*v[967];
  v[970]=F[3]-h[8]*v[810]-v[52]*v[820]-h[3]*v[830]-v[880]*v[967];
  v[971]=-(h[8]*v[811])-v[52]*v[821]-h[3]*v[831]-v[881]*v[967];
  v[972]=-(h[8]*v[812])-v[52]*v[822]-h[3]*v[832]-v[882]*v[967];
  v[973]=-(h[8]*v[813])-v[52]*v[823]-h[3]*v[833]-v[883]*v[967];
  v[974]=-(h[8]*v[814])-v[52]*v[824]-h[3]*v[834]-v[884]*v[967];
  v[975]=F[5]-h[8]*v[815]-v[52]*v[825]-h[3]*v[835]-v[885]*v[967];
  v[976]=-(h[8]*v[816])-v[52]*v[826]-h[3]*v[836]-v[886]*v[967];
  v[977]=-((v[54]*v[847]+h[5]*v[857]+h[4]*v[867])/v[877]);
  v[978]=-((h[8]*v[757]+v[52]*v[767]+h[3]*v[777])/v[877]);
  v[979]=-((v[54]*v[757]+h[5]*v[767]+h[4]*v[777])/v[877]);
  v[980]=-((v[54]*v[807]+h[5]*v[817]+h[4]*v[827])/v[877]);
  v[981]=-((-F[3]+h[7]*v[807]+h[6]*v[817]+v[50]*v[827])/v[877]);
  v[982]=-((-F[6]+h[7]*v[847]+h[6]*v[857]+v[50]*v[867])/v[877]);
  v[983]=-((h[8]*v[847]+v[52]*v[857]+h[3]*v[867])/v[877]);
  v[984]=v[592]/v[877];
  v[985]=-((v[54]*v[848]+h[5]*v[858]+h[4]*v[868]+v[878]*v[977])/v[968]);
  v[986]=F[8]-v[54]*v[849]-h[5]*v[859]-h[4]*v[869]-v[879]*v[977]-v[969]*v[985];
  v[987]=-(v[54]*v[850])-h[5]*v[860]-h[4]*v[870]-v[880]*v[977]-v[970]*v[985];
  v[988]=F[6]-v[54]*v[851]-h[5]*v[861]-h[4]*v[871]-v[881]*v[977]-v[971]*v[985];
  v[989]=F[7]-v[54]*v[852]-h[5]*v[862]-h[4]*v[872]-v[882]*v[977]-v[972]*v[985];
  v[990]=-(v[54]*v[853])-h[5]*v[863]-h[4]*v[873]-v[883]*v[977]-v[973]*v[985];
  v[991]=-(v[54]*v[854])-h[5]*v[864]-h[4]*v[874]-v[884]*v[977]-v[974]*v[985];
  v[992]=-(v[54]*v[855])-h[5]*v[865]-h[4]*v[875]-v[885]*v[977]-v[975]*v[985];
  v[993]=-(v[54]*v[856])-h[5]*v[866]-h[4]*v[876]-v[886]*v[977]-v[976]*v[985];
  v[994]=-((-F[1]+h[8]*v[758]+v[52]*v[768]+h[3]*v[778]+v[878]*v[978])/v[968]);\

  v[995]=-((v[54]*v[758]+h[5]*v[768]+h[4]*v[778]+v[878]*v[979])/v[968]);
  v[996]=-((v[54]*v[808]+h[5]*v[818]+h[4]*v[828]+v[878]*v[980])/v[968]);
  v[997]=-((h[7]*v[808]+h[6]*v[818]+v[50]*v[828]+v[878]*v[981])/v[968]);
  v[998]=-((h[7]*v[848]+h[6]*v[858]+v[50]*v[868]+v[878]*v[982])/v[968]);
  v[999]=-((-F[7]+h[8]*v[848]+v[52]*v[858]+h[3]*v[868]+v[878]*v[983])/v[968]);\

  v[1000]=(v[593]-v[878]*v[984])/v[968];
  v[1001]=-((h[8]*v[759]+v[52]*v[769]+h[3]*v[779]+v[879]*v[978]+v[969]*v[994])\
/v[986]);
  v[1002]=F[0]-h[8]*v[760]-v[52]*v[770]-h[3]*v[780]-v[880]*v[978]-v[1001]*v[\
987]-v[970]*v[994];
  v[1003]=-(h[8]*v[761])-v[52]*v[771]-h[3]*v[781]-v[881]*v[978]-v[1001]*v[988]\
-v[971]*v[994];
  v[1004]=-(h[8]*v[762])-v[52]*v[772]-h[3]*v[782]-v[882]*v[978]-v[1001]*v[989]\
-v[972]*v[994];
  v[1005]=-(h[8]*v[763])-v[52]*v[773]-h[3]*v[783]-v[883]*v[978]-v[1001]*v[990]\
-v[973]*v[994];
  v[1006]=-(h[8]*v[764])-v[52]*v[774]-h[3]*v[784]-v[884]*v[978]-v[1001]*v[991]\
-v[974]*v[994];
  v[1007]=F[2]-h[8]*v[765]-v[52]*v[775]-h[3]*v[785]-v[885]*v[978]-v[1001]*v[\
992]-v[975]*v[994];
  v[1008]=-(h[8]*v[766])-v[52]*v[776]-h[3]*v[786]-v[886]*v[978]-v[1001]*v[993]\
-v[976]*v[994];
  v[1009]=-((-F[2]+v[54]*v[759]+h[5]*v[769]+h[4]*v[779]+v[879]*v[979]+v[969]*\
v[995])/v[986]);
  v[1010]=-((-F[5]+v[54]*v[809]+h[5]*v[819]+h[4]*v[829]+v[879]*v[980]+v[969]*\
v[996])/v[986]);
  v[1011]=-((h[7]*v[809]+h[6]*v[819]+v[50]*v[829]+v[879]*v[981]+v[969]*v[997])\
/v[986]);
  v[1012]=-((h[7]*v[849]+h[6]*v[859]+v[50]*v[869]+v[879]*v[982]+v[969]*v[998])\
/v[986]);
  v[1013]=-((h[8]*v[849]+v[52]*v[859]+h[3]*v[869]+v[879]*v[983]+v[969]*v[999])\
/v[986]);
  v[1014]=(v[594]-v[1000]*v[969]-v[879]*v[984])/v[986];
  v[1015]=-((v[54]*v[760]+h[5]*v[770]+h[4]*v[780]+v[880]*v[979]+v[1009]*v[987]\
+v[970]*v[995])
   /v[1002]);
  v[1016]=F[0]-v[1003]*v[1015]-v[54]*v[761]-h[5]*v[771]-h[4]*v[781]-v[881]*v[\
979]-v[1009]*v[988]
   -v[971]*v[995];
  v[1017]=F[1]-v[1004]*v[1015]-v[54]*v[762]-h[5]*v[772]-h[4]*v[782]-v[882]*v[\
979]-v[1009]*v[989]
   -v[972]*v[995];
  v[1018]=-(v[1005]*v[1015])-v[54]*v[763]-h[5]*v[773]-h[4]*v[783]-v[883]*v[\
979]-v[1009]*v[990]
   -v[973]*v[995];
  v[1019]=-(v[1006]*v[1015])-v[54]*v[764]-h[5]*v[774]-h[4]*v[784]-v[884]*v[\
979]-v[1009]*v[991]
   -v[974]*v[995];
  v[1020]=-(v[1007]*v[1015])-v[54]*v[765]-h[5]*v[775]-h[4]*v[785]-v[885]*v[\
979]-v[1009]*v[992]
   -v[975]*v[995];
  v[1021]=-(v[1008]*v[1015])-v[54]*v[766]-h[5]*v[776]-h[4]*v[786]-v[886]*v[\
979]-v[1009]*v[993]
   -v[976]*v[995];
  v[1022]=-((v[54]*v[810]+h[5]*v[820]+h[4]*v[830]+v[880]*v[980]+v[1010]*v[987]\
+v[970]*v[996])
   /v[1002]);
  v[1023]=-((h[7]*v[810]+h[6]*v[820]+v[50]*v[830]+v[880]*v[981]+v[1011]*v[987]\
+v[970]*v[997])
   /v[1002]);
  v[1024]=-((h[7]*v[850]+h[6]*v[860]+v[50]*v[870]+v[880]*v[982]+v[1012]*v[987]\
+v[970]*v[998])
   /v[1002]);
  v[1025]=-((-F[6]+h[8]*v[850]+v[52]*v[860]+h[3]*v[870]+v[880]*v[983]+v[1013]*\
v[987]+v[970]*v[999])
   /v[1002]);
  v[1026]=-((-v[595]+v[1000]*v[970]+v[880]*v[984]+v[1014]*v[987])/v[1002]);
  v[1027]=-((-F[3]+v[1003]*v[1022]+v[54]*v[811]+h[5]*v[821]+h[4]*v[831]+v[881]\
*v[980]
   +v[1010]*v[988]+v[971]*v[996])/v[1016]);
  v[1028]=F[4]-v[1004]*v[1022]-v[1017]*v[1027]-v[54]*v[812]-h[5]*v[822]-h[4]*\
v[832]-v[882]*v[980]
   -v[1010]*v[989]-v[972]*v[996];
  v[1029]=-(v[1005]*v[1022])-v[1018]*v[1027]-v[54]*v[813]-h[5]*v[823]-h[4]*v[\
833]-v[883]*v[980]
   -v[1010]*v[990]-v[973]*v[996];
  v[1030]=-(v[1006]*v[1022])-v[1019]*v[1027]-v[54]*v[814]-h[5]*v[824]-h[4]*v[\
834]-v[884]*v[980]
   -v[1010]*v[991]-v[974]*v[996];
  v[1031]=-(v[1007]*v[1022])-v[1020]*v[1027]-v[54]*v[815]-h[5]*v[825]-h[4]*v[\
835]-v[885]*v[980]
   -v[1010]*v[992]-v[975]*v[996];
  v[1032]=-(v[1008]*v[1022])-v[1021]*v[1027]-v[54]*v[816]-h[5]*v[826]-h[4]*v[\
836]-v[886]*v[980]
   -v[1010]*v[993]-v[976]*v[996];
  v[1033]=-((v[1003]*v[1023]+h[7]*v[811]+h[6]*v[821]+v[50]*v[831]+v[881]*v[\
981]+v[1011]*v[988]
   +v[971]*v[997])/v[1016]);
  v[1034]=-((v[1003]*v[1024]+h[7]*v[851]+h[6]*v[861]+v[50]*v[871]+v[881]*v[\
982]+v[1012]*v[988]
   +v[971]*v[998])/v[1016]);
  v[1035]=-((v[1003]*v[1025]+h[8]*v[851]+v[52]*v[861]+h[3]*v[871]+v[881]*v[\
983]+v[1013]*v[988]
   +v[971]*v[999])/v[1016]);
  v[1036]=-((v[1003]*v[1026]-v[596]+v[1000]*v[971]+v[881]*v[984]+v[1014]*v[\
988])/v[1016]);
  v[1037]=-((v[1004]*v[1023]+v[1017]*v[1033]+h[7]*v[812]+h[6]*v[822]+v[50]*v[\
832]+v[882]*v[981]
   +v[1011]*v[989]+v[972]*v[997])/v[1028]);
  v[1038]=F[4]-v[1005]*v[1023]-v[1018]*v[1033]-v[1029]*v[1037]-h[7]*v[813]-h[\
6]*v[823]-v[50]*v[833]
   -v[883]*v[981]-v[1011]*v[990]-v[973]*v[997];
  v[1039]=F[5]-v[1006]*v[1023]-v[1019]*v[1033]-v[1030]*v[1037]-h[7]*v[814]-h[\
6]*v[824]-v[50]*v[834]
   -v[884]*v[981]-v[1011]*v[991]-v[974]*v[997];
  v[1040]=-(v[1007]*v[1023])-v[1020]*v[1033]-v[1031]*v[1037]-h[7]*v[815]-h[6]*\
v[825]-v[50]*v[835]
   -v[885]*v[981]-v[1011]*v[992]-v[975]*v[997];
  v[1041]=-(v[1008]*v[1023])-v[1021]*v[1033]-v[1032]*v[1037]-h[7]*v[816]-h[6]*\
v[826]-v[50]*v[836]
   -v[886]*v[981]-v[1011]*v[993]-v[976]*v[997];
  v[1042]=-((v[1004]*v[1024]+v[1017]*v[1034]+h[7]*v[852]+h[6]*v[862]+v[50]*v[\
872]+v[882]*v[982]
   +v[1012]*v[989]+v[972]*v[998])/v[1028]);
  v[1043]=-((v[1004]*v[1025]+v[1017]*v[1035]+h[8]*v[852]+v[52]*v[862]+h[3]*v[\
872]+v[882]*v[983]
   +v[1013]*v[989]+v[972]*v[999])/v[1028]);
  v[1044]=-((v[1004]*v[1026]+v[1017]*v[1036]-v[597]+v[1000]*v[972]+v[882]*v[\
984]+v[1014]*v[989])
   /v[1028]);
  v[1045]=-((-F[7]+v[1005]*v[1024]+v[1018]*v[1034]+v[1029]*v[1042]+h[7]*v[853]\
+h[6]*v[863]
   +v[50]*v[873]+v[883]*v[982]+v[1012]*v[990]+v[973]*v[998])/v[1038]);
  v[1046]=F[8]-v[1006]*v[1024]-v[1019]*v[1034]-v[1030]*v[1042]-v[1039]*v[1045]\
-h[7]*v[854]
   -h[6]*v[864]-v[50]*v[874]-v[884]*v[982]-v[1012]*v[991]-v[974]*v[998];
  v[1047]=-(v[1007]*v[1024])-v[1020]*v[1034]-v[1031]*v[1042]-v[1040]*v[1045]-\
h[7]*v[855]
   -h[6]*v[865]-v[50]*v[875]-v[885]*v[982]-v[1012]*v[992]-v[975]*v[998];
  v[1048]=-(v[1008]*v[1024])-v[1021]*v[1034]-v[1032]*v[1042]-v[1041]*v[1045]-\
h[7]*v[856]
   -h[6]*v[866]-v[50]*v[876]-v[886]*v[982]-v[1012]*v[993]-v[976]*v[998];
  v[1049]=-((v[1005]*v[1025]+v[1018]*v[1035]+v[1029]*v[1043]+h[8]*v[853]+v[52]\
*v[863]+h[3]*v[873]
   +v[883]*v[983]+v[1013]*v[990]+v[973]*v[999])/v[1038]);
  v[1050]=-((v[1005]*v[1026]+v[1018]*v[1036]+v[1029]*v[1044]-v[598]+v[1000]*v[\
973]+v[883]*v[984]
   +v[1014]*v[990])/v[1038]);
  v[1051]=-((v[1006]*v[1025]+v[1019]*v[1035]+v[1030]*v[1043]+v[1039]*v[1049]+\
h[8]*v[854]
   +v[52]*v[864]+h[3]*v[874]+v[884]*v[983]+v[1013]*v[991]+v[974]*v[999])/v[\
1046]);
  v[1052]=F[8]-v[1007]*v[1025]-v[1020]*v[1035]-v[1031]*v[1043]-v[1040]*v[1049]\
-v[1047]*v[1051]
   -h[8]*v[855]-v[52]*v[865]-h[3]*v[875]-v[885]*v[983]-v[1013]*v[992]-v[975]*\
v[999];
  v[1053]=-(v[1008]*v[1025])-v[1021]*v[1035]-v[1032]*v[1043]-v[1041]*v[1049]-\
v[1048]*v[1051]
   -h[8]*v[856]-v[52]*v[866]-h[3]*v[876]-v[886]*v[983]-v[1013]*v[993]-v[976]*\
v[999];
  v[1054]=-((v[1006]*v[1026]+v[1019]*v[1036]+v[1030]*v[1044]+v[1039]*v[1050]-\
v[599]+v[1000]*v[974]
   +v[884]*v[984]+v[1014]*v[991])/v[1046]);
  v[1055]=-((v[1007]*v[1026]+v[1020]*v[1036]+v[1031]*v[1044]+v[1040]*v[1050]+\
v[1047]*v[1054]-v[600]
   +v[1000]*v[975]+v[885]*v[984]+v[1014]*v[992])/v[1052]);
  v[1057]=-v[141]+h[3]*v[255]+h[8]*v[257]+v[256]*v[52]+v[247]*v[967];
  v[1058]=-v[146]+h[4]*v[260]+h[5]*v[261]+v[262]*v[54]+v[247]*v[977]-v[1057]*\
v[985];
  v[1059]=-(v[1001]*v[1058])-v[136]+h[3]*v[250]+h[8]*v[252]+v[251]*v[52]+v[\
247]*v[978]
   -v[1057]*v[994];
  v[1060]=-(v[1009]*v[1058])-v[1015]*v[1059]-v[137]+h[4]*v[250]+h[5]*v[251]+v[\
252]*v[54]
   +v[247]*v[979]-v[1057]*v[995];
  v[1061]=-(v[1010]*v[1058])-v[1022]*v[1059]-v[1027]*v[1060]-v[143]+h[4]*v[\
255]+h[5]*v[256]
   +v[257]*v[54]+v[247]*v[980]-v[1057]*v[996];
  v[1062]=-(v[1011]*v[1058])-v[1023]*v[1059]-v[1033]*v[1060]-v[1037]*v[1061]-\
v[139]+h[6]*v[256]
   +h[7]*v[257]+v[255]*v[50]+v[247]*v[981]-v[1057]*v[997];
  v[1063]=-(v[1012]*v[1058])-v[1024]*v[1059]-v[1034]*v[1060]-v[1042]*v[1061]-\
v[1045]*v[1062]-v[144]
   +h[6]*v[261]+h[7]*v[262]+v[260]*v[50]+v[247]*v[982]-v[1057]*v[998];
  v[1064]=-(v[1013]*v[1058])-v[1025]*v[1059]-v[1035]*v[1060]-v[1043]*v[1061]-\
v[1049]*v[1062]
   -v[1051]*v[1063]-v[145]+h[3]*v[260]+h[8]*v[262]+v[261]*v[52]+v[247]*v[983]-\
v[1057]*v[999];
  v[1065]=(-d[3]+v[1000]*v[1057]+v[1014]*v[1058]+v[1026]*v[1059]+v[1036]*v[\
1060]+v[1044]*v[1061]
   +v[1050]*v[1062]+v[1054]*v[1063]+v[1055]*v[1064]-d[4]*v[132]+v[2261]+v[\
2275]-v[247]*v[984])/(d[4]
   +v[1008]*v[1026]+v[1021]*v[1036]+v[1032]*v[1044]+v[1041]*v[1050]+v[1048]*v[\
1054]+v[1053]*v[1055]
   +d[5]*v[2275]+v[1000]*v[976]+v[886]*v[984]+v[1014]*v[993]);
  v[1066]=(v[1064]-v[1053]*v[1065])/v[1052];
  v[1067]=(v[1063]-v[1048]*v[1065]-v[1047]*v[1066])/v[1046];
  v[1068]=-((-v[1062]+v[1041]*v[1065]+v[1040]*v[1066]+v[1039]*v[1067])/v[1038]\
);
  v[1069]=-((-v[1061]+v[1032]*v[1065]+v[1031]*v[1066]+v[1030]*v[1067]+v[1029]*\
v[1068])/v[1028]);
  v[1070]=-((-v[1060]+v[1021]*v[1065]+v[1020]*v[1066]+v[1019]*v[1067]+v[1018]*\
v[1068]
   +v[1017]*v[1069])/v[1016]);
  v[1071]=-((-v[1059]+v[1008]*v[1065]+v[1007]*v[1066]+v[1006]*v[1067]+v[1005]*\
v[1068]
   +v[1004]*v[1069]+v[1003]*v[1070])/v[1002]);
  v[1072]=-((-v[1058]+v[1071]*v[987]+v[1070]*v[988]+v[1069]*v[989]+v[1068]*v[\
990]+v[1067]*v[991]
   +v[1066]*v[992]+v[1065]*v[993])/v[986]);
  v[1073]=-((-v[1057]+v[1072]*v[969]+v[1071]*v[970]+v[1070]*v[971]+v[1069]*v[\
972]+v[1068]*v[973]
   +v[1067]*v[974]+v[1066]*v[975]+v[1065]*v[976])/v[968]);
  v[1074]=-((v[247]+v[1073]*v[878]+v[1072]*v[879]+v[1071]*v[880]+v[1070]*v[\
881]+v[1069]*v[882]
   +v[1068]*v[883]+v[1067]*v[884]+v[1066]*v[885]+v[1065]*v[886])/v[877]);
  v[123]=v[1074]+v[123];
  v[124]=v[1073]+v[124];
  v[125]=v[1072]+v[125];
  v[126]=v[1071]+v[126];
  v[127]=v[1070]+v[127];
  v[128]=v[1069]+v[128];
  v[129]=v[1068]+v[129];
  v[130]=v[1067]+v[130];
  v[131]=v[1066]+v[131];
  v[132]=v[1065]+v[132];
  if(sqrt((v[1065]*v[1065])+(v[1066]*v[1066])+(v[1067]*v[1067])+(v[1068]*v[\
1068])+(v[1069]*v[1069])
   +(v[1070]*v[1070])+(v[1071]*v[1071])+(v[1072]*v[1072])+(v[1073]*v[1073])+(\
v[1074]*v[1074])
   )<0.1e-13){
   if (debugaceroutine) std::cout << \"   iteration converged!\"<< std::endl;
   if (debugaceroutine) std::cout << \"   iteration : \"<<i134<< std::endl;
   if (debugplastic) std::cout << \"   iteration converged!\"<< std::endl;
   if (debugplastic) std::cout << \"   iteration : \"<<i134<< std::endl;
   AdditionalData[1]=0e0;
   AdditionalData[2]=i134;
   break;
  } else {
  };
  if(i134==50){
   if (debugaceroutine) std::cout << \"   iteration diverged!!!!\" << \
std::endl;
   if (debugplastic) std::cout << \"   iteration diverged!!!!\" << std::endl;
   AdditionalData[1]=1000e0;
   AdditionalData[2]=i134;
  } else {
  };
 };/* end for */
 v[109]=v[123];
 v[110]=v[124];
 v[111]=v[125];
 v[112]=v[126];
 v[113]=v[127];
 v[114]=v[128];
 v[115]=v[129];
 v[116]=v[130];
 v[117]=v[131];
 v[118]=v[132];
};
v[2131]=1e0+v[111];
v[2129]=1e0+v[110];
v[2127]=1e0+v[109];
v[2124]=F[1]*v[115]+F[2]*v[116]+F[0]*v[2127];
v[2284]=(v[2124]*v[2124]);
v[2125]=F[0]*v[112]+F[2]*v[117]+F[1]*v[2129];
v[2283]=(v[2125]*v[2125]);
v[2126]=F[0]*v[113]+F[1]*v[114]+F[2]*v[2131];
v[2282]=(v[2126]*v[2126]);
v[2280]=v[2124]*v[2126];
v[2128]=F[4]*v[115]+F[5]*v[116]+F[3]*v[2127];
v[2130]=F[3]*v[112]+F[5]*v[117]+F[4]*v[2129];
v[2132]=F[3]*v[113]+F[4]*v[114]+F[5]*v[2131];
v[2133]=F[7]*v[115]+F[8]*v[116]+F[6]*v[2127];
v[2134]=F[6]*v[112]+F[8]*v[117]+F[7]*v[2129];
v[2135]=F[6]*v[113]+F[7]*v[114]+F[8]*v[2131];
v[2136]=(v[2128]*v[2128])+(v[2133]*v[2133])+v[2284];
v[2137]=v[2124]*v[2125]+v[2128]*v[2130]+v[2133]*v[2134];
v[2150]=(v[2137]*v[2137]);
v[2138]=v[2128]*v[2132]+v[2133]*v[2135]+v[2280];
v[2278]=2e0*v[2138];
v[2152]=(v[2138]*v[2138]);
v[2139]=(v[2130]*v[2130])+(v[2134]*v[2134])+v[2283];
v[2140]=v[2125]*v[2126]+v[2130]*v[2132]+v[2134]*v[2135];
v[2276]=2e0*v[2140];
v[2146]=v[2138]*v[2276];
v[2141]=(v[2132]*v[2132])+(v[2135]*v[2135])+v[2282];
v[2277]=-(v[2140]*v[2140])+v[2139]*v[2141];
v[2145]=v[156]+v[157]/(4e0*(v[2137]*v[2146]-v[2141]*v[2150]-v[2139]*v[2152]+v[\
2136]*v[2277]));
v[2159]=v[2145]*v[2277]+v[73];
v[2290]=v[2128]*v[2159];
v[2289]=v[2133]*v[2159];
v[2158]=v[2145]*(v[2136]*v[2141]-v[2152])+v[73];
v[2288]=v[2130]*v[2158];
v[2287]=v[2134]*v[2158];
v[2157]=v[2145]*(v[2136]*v[2139]-v[2150])+v[73];
v[2286]=v[2132]*v[2157];
v[2285]=v[2135]*v[2157];
v[2147]=(v[2125]*v[2145])/2e0;
v[2148]=-2e0*v[2136]*v[2140]+v[2137]*v[2278];
v[2156]=(v[2145]*v[2148])/2e0;
v[2149]=(v[2145]*(v[2137]*v[2276]-v[2139]*v[2278]))/2e0;
v[2166]=v[2133]*v[2149]+v[2134]*v[2156]+v[2285];
v[2162]=v[2128]*v[2149]+v[2130]*v[2156]+v[2286];
v[2151]=-2e0*v[2137]*v[2141]+v[2146];
v[2155]=(v[2145]*v[2151])/2e0;
v[2168]=v[2135]*v[2149]+v[2134]*v[2155]+v[2289];
v[2167]=v[2133]*v[2155]+v[2135]*v[2156]+v[2287];
v[2164]=v[2132]*v[2149]+v[2130]*v[2155]+v[2290];
v[2163]=v[2128]*v[2155]+v[2132]*v[2156]+v[2288];
v[2154]=2e0*(2e0*v[2126]*v[2147]*v[2148]+2e0*v[2124]*v[2147]*v[2151]+2e0*v[\
2149]*v[2280]
 +v[2157]*v[2282]+v[2158]*v[2283]+v[2159]*v[2284]);
v[2160]=2e0*(v[2126]*v[2162]+v[2125]*v[2163]+v[2124]*v[2164]);
v[2161]=2e0*(v[2126]*v[2166]+v[2125]*v[2167]+v[2124]*v[2168]);
v[2165]=2e0*(v[2132]*v[2162]+v[2130]*v[2163]+v[2128]*v[2164]);
v[2170]=2e0*(v[2135]*v[2166]+v[2134]*v[2167]+v[2133]*v[2168]);
v[2172]=(-v[2154]-v[2165]-v[2170])/3e0;
v[2175]=sqrt(0.15e1*(2e0*(v[2160]*v[2160])+2e0*(v[2161]*v[2161])+8e0*Power(v[\
2132]*v[2166]
 +v[2130]*v[2167]+v[2128]*v[2168],2)+Power(v[2154]+v[2172],2)+Power(v[2165]+v[\
2172],2)+Power(v[2170]
 +v[2172],2)));
v[2178]=2e0*v[2156];
v[2180]=2e0*v[2149];
v[2181]=2e0*v[2155];
v[2182]=v[2134]*v[2178]+v[2133]*v[2180]+2e0*v[2285];
v[2183]=v[2130]*v[2178]+v[2128]*v[2180]+2e0*v[2286];
v[2184]=2e0*v[2126]*v[2157]+v[2125]*v[2178]+v[2124]*v[2180];
v[2185]=v[2135]*v[2178]+v[2133]*v[2181]+2e0*v[2287];
v[2186]=v[2132]*v[2178]+v[2128]*v[2181]+2e0*v[2288];
v[2187]=2e0*v[2125]*v[2158]+v[2126]*v[2178]+v[2124]*v[2181];
v[2188]=v[2135]*v[2180]+v[2134]*v[2181]+2e0*v[2289];
v[2189]=v[2132]*v[2180]+v[2130]*v[2181]+2e0*v[2290];
v[2190]=2e0*v[2124]*v[2159]+v[2126]*v[2180]+v[2125]*v[2181];
b2200=b105;
AdditionalData[5]=v[2175];
AdditionalData[6]=d[3]+d[4]*v[118]+v[189]*exp(-(d[5]*v[118]));
AdditionalData[7]=v[2154];
AdditionalData[8]=v[2160];
AdditionalData[9]=v[2161];
AdditionalData[10]=v[2160];
AdditionalData[11]=v[2165];
AdditionalData[12]=v[2170];
if (debugaceroutine) std::cout << \"Final MisesTau:\" << v[2175]<< std::endl;
if (debugplastic) std::cout << \"Final MisesTau:\" << v[2175]<< std::endl;
P[0]=v[113]*v[2184]+v[112]*v[2187]+v[2127]*v[2190];
P[1]=v[114]*v[2184]+v[2129]*v[2187]+v[115]*v[2190];
P[2]=v[2131]*v[2184]+v[117]*v[2187]+v[116]*v[2190];
P[3]=v[113]*v[2183]+v[112]*v[2186]+v[2127]*v[2189];
P[4]=v[114]*v[2183]+v[2129]*v[2186]+v[115]*v[2189];
P[5]=v[2131]*v[2183]+v[117]*v[2186]+v[116]*v[2189];
P[6]=v[113]*v[2182]+v[112]*v[2185]+v[2127]*v[2188];
P[7]=v[114]*v[2182]+v[2129]*v[2185]+v[115]*v[2188];
P[8]=v[2131]*v[2182]+v[117]*v[2185]+v[116]*v[2188];
h[0]=v[109];
h[1]=v[110];
h[2]=v[111];
h[3]=v[112];
h[4]=v[113];
h[5]=v[114];
h[6]=v[115];
h[7]=v[116];
h[8]=v[117];
h[9]=v[118];
};\
\>", "Print",
 CellChangeTimes->{3.769619903716874*^9, 3.769620818650776*^9, 
  3.769620928398815*^9, 3.769621257471116*^9, 3.769621667230795*^9, 
  3.7696690305333443`*^9},
 CellLabel->
  "During evaluation of \
In[205]:=",ExpressionUUID->"cc84da0d-002c-4755-9205-6cb0682545fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1383, 855},
WindowMargins->{{Automatic, -1715}, {Automatic, 0}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 250, 7, 160, "Title",ExpressionUUID->"35744ce8-ad11-4158-9b67-64431b7120b7"],
Cell[CellGroupData[{
Cell[697, 26, 163, 3, 54, "Subsection",ExpressionUUID->"8dbbca34-2e28-4462-920d-536e8f7ef81a"],
Cell[863, 31, 6484, 205, 186, "Text",ExpressionUUID->"95f75d79-fc70-4e85-94eb-bf05561bfa1b"]
}, Closed]],
Cell[CellGroupData[{
Cell[7384, 241, 169, 3, 38, "Subsection",ExpressionUUID->"97acbb4e-080d-4a82-a07c-19e0a5fef2b1"],
Cell[7556, 246, 476, 13, 82, "Text",ExpressionUUID->"4e1c2e72-720e-43fe-ae6b-0e1250a6efcc"],
Cell[CellGroupData[{
Cell[8057, 263, 9095, 218, 753, "Input",ExpressionUUID->"3f0d847a-6123-4db9-a12f-9c7d75c36d19"],
Cell[17155, 483, 3219, 75, 86, "Print",ExpressionUUID->"167713c2-fa53-43eb-9e79-d3bada400db2"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[20423, 564, 163, 3, 38, "Subsection",ExpressionUUID->"88b6064e-dd20-4606-9e73-a85e5427c825"],
Cell[CellGroupData[{
Cell[20611, 571, 2001, 50, 169, "Input",ExpressionUUID->"56bb9bb5-a137-4381-8bd6-0aeef7de36c0"],
Cell[22615, 623, 1195, 27, 76, "Output",ExpressionUUID->"bb68e662-a822-49ef-95d7-545a29779289"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[23871, 657, 166, 3, 72, "Title",ExpressionUUID->"7de93dac-5ed9-4521-a44a-58035c84dbf4"],
Cell[CellGroupData[{
Cell[24062, 664, 10006, 230, 552, "Input",ExpressionUUID->"f3ea91b8-ed2b-468c-a1a4-acea30ae07fc"],
Cell[CellGroupData[{
Cell[34093, 898, 2767, 69, 86, "Print",ExpressionUUID->"d38ac246-6cb7-4642-914b-29eee48c5aaa"],
Cell[36863, 969, 1908, 59, 840, "Print",ExpressionUUID->"8abdb2c1-0e32-4682-9e25-f3cb4b81b7a6"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[38832, 1035, 164, 3, 72, "Title",ExpressionUUID->"45ecbc3f-c8bb-4e2d-b361-1289ebc4f19d"],
Cell[CellGroupData[{
Cell[39021, 1042, 7216, 171, 363, "Input",ExpressionUUID->"2c61b94d-2de2-4ff1-b17f-cdb56fa1f763"],
Cell[46240, 1215, 2563, 65, 70, "Print",ExpressionUUID->"b185e971-fdba-4e8d-ad31-2fe341eb0c56"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[48852, 1286, 270, 4, 72, "Title",ExpressionUUID->"cbefa29c-0ce1-4064-a6c5-a28ad2c7906d"],
Cell[CellGroupData[{
Cell[49147, 1294, 8514, 196, 409, "Input",ExpressionUUID->"3850eaae-ceee-40a7-b471-af8c3ea4c819"],
Cell[57664, 1492, 2518, 65, 70, "Print",ExpressionUUID->"aefa16e5-17da-4717-85c1-3ccaed4f00ad"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[60231, 1563, 321, 5, 72, "Title",ExpressionUUID->"321d3b9c-1ea4-4ef6-b307-1eb4bdc603fe"],
Cell[CellGroupData[{
Cell[60577, 1572, 7474, 170, 346, "Input",ExpressionUUID->"0dd1c630-14b1-4057-ad63-1c077c9fce3c"],
Cell[68054, 1744, 2539, 65, 70, "Print",ExpressionUUID->"c9f54875-e954-4f19-bb83-0fa0c5d430e8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[70642, 1815, 467, 7, 72, "Title",ExpressionUUID->"d0645cbb-5c75-4e12-94d0-0df5355fc01a"],
Cell[CellGroupData[{
Cell[71134, 1826, 161, 3, 54, "Subsection",ExpressionUUID->"9405cc7e-6170-4e4f-afa5-3b3772fccbd0"],
Cell[71298, 1831, 3610, 53, 892, "Input",ExpressionUUID->"692c8963-2086-4e42-8026-bc3aca26f5f5"],
Cell[74911, 1886, 161, 3, 30, "Input",ExpressionUUID->"81277db9-2dc6-4753-8561-900c7f5714cd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75109, 1894, 181, 3, 54, "Subsection",ExpressionUUID->"4fc4ff44-e9ca-4827-ac7e-cca6c4d334f2"],
Cell[75293, 1899, 10194, 233, 709, "Input",ExpressionUUID->"ecc573e2-7795-4879-8a2b-168e7718e9be"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85524, 2137, 165, 3, 54, "Subsection",ExpressionUUID->"5f997b32-b184-4a81-bb7e-cb646f196827"],
Cell[CellGroupData[{
Cell[85714, 2144, 19042, 480, 1946, "Input",ExpressionUUID->"bd908fdb-4d53-41a5-83d0-a3f8e77cb409"],
Cell[CellGroupData[{
Cell[104781, 2628, 1542, 35, 46, "Print",ExpressionUUID->"938ab149-a622-4818-bbb6-2730f18b34aa"],
Cell[106326, 2665, 2801, 69, 86, "Print",ExpressionUUID->"664c5adc-8a9f-416d-88fb-6171f3446037"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109176, 2740, 381, 8, 30, "Input",ExpressionUUID->"6375ad8f-de5e-4c0f-a353-1d7ac595597b"],
Cell[109560, 2750, 264, 5, 34, "Output",ExpressionUUID->"8e2dde65-ffcf-46a8-9da4-c53c5e0cbd17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109861, 2760, 240, 4, 30, "Input",ExpressionUUID->"b046b526-ea25-4f69-812b-ae41795e70ce"],
Cell[110104, 2766, 59684, 1399, 20441, "Print",ExpressionUUID->"cc84da0d-002c-4755-9205-6cb0682545fd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

